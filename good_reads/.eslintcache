[{"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\index.js":"1","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\App.js":"2","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\reportWebVitals.js":"3","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\Routes.jsx":"4","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\action.js":"5","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\actionTypes.js":"6","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\store.js":"7","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\reducer.js":"8","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx":"9","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx":"10","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\genres\\Genres.jsx":"11","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx":"12","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx":"13","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\reducer.js":"14","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\action.js":"15","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\actionTypes.js":"16","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchBar\\Search.jsx":"17","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx":"18","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx":"19","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\redux.js":"20","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\reducer.js":"21","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\redux.js":"22","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js":"23","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js":"24","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\actionTypes.js":"25","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\actionType.js":"26","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\actionTypes.js":"27","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\actionType.js":"28","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\People.jsx":"29","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\actionType.js":"30","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx":"31","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx":"32","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx":"33","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Discussion.jsx":"34","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Home.jsx":"35","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\Trivia.jsx":"36","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\action.js":"37","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\people.js":"38","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Footer\\Footer.jsx":"39","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\action.js":"40","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\action.js":"41","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx":"42","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\MyBooksCard\\Navbar\\Navbar.jsx":"43"},{"size":741,"mtime":1612371307073,"results":"44","hashOfConfig":"45"},{"size":198,"mtime":1612414082934,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":2595,"mtime":1612416794586,"results":"48","hashOfConfig":"45"},{"size":1149,"mtime":1612367573584,"results":"49","hashOfConfig":"45"},{"size":228,"mtime":1612367573586,"results":"50","hashOfConfig":"45"},{"size":1153,"mtime":1612371307105,"results":"51","hashOfConfig":"45"},{"size":1548,"mtime":1612367573587,"results":"52","hashOfConfig":"45"},{"size":1127,"mtime":1612367573574,"results":"53","hashOfConfig":"45"},{"size":2139,"mtime":1612407323701,"results":"54","hashOfConfig":"45"},{"size":1114,"mtime":1612406173641,"results":"55","hashOfConfig":"45"},{"size":1816,"mtime":1612407932402,"results":"56","hashOfConfig":"45"},{"size":3137,"mtime":1612413071340,"results":"57","hashOfConfig":"45"},{"size":1532,"mtime":1612367573592,"results":"58","hashOfConfig":"45"},{"size":1600,"mtime":1612367573589,"results":"59","hashOfConfig":"45"},{"size":226,"mtime":1612367573590,"results":"60","hashOfConfig":"45"},{"size":3030,"mtime":1612415238744,"results":"61","hashOfConfig":"45"},{"size":990,"mtime":1612367573555,"results":"62","hashOfConfig":"45"},{"size":1098,"mtime":1612367573570,"results":"63","hashOfConfig":"45"},{"size":1723,"mtime":1612371307105,"results":"64","hashOfConfig":"45"},{"size":1423,"mtime":1612371307105,"results":"65","hashOfConfig":"45"},{"size":652,"mtime":1612371307105,"results":"66","hashOfConfig":"45"},{"size":542,"mtime":1612371307105,"results":"67","hashOfConfig":"45"},{"size":343,"mtime":1612371307105,"results":"68","hashOfConfig":"45"},{"size":544,"mtime":1612371307105,"results":"69","hashOfConfig":"45"},{"size":165,"mtime":1612371307105,"results":"70","hashOfConfig":"45"},{"size":145,"mtime":1612371307105,"results":"71","hashOfConfig":"45"},{"size":100,"mtime":1612371307105,"results":"72","hashOfConfig":"45"},{"size":2548,"mtime":1612371307089,"results":"73","hashOfConfig":"45"},{"size":46,"mtime":1612371307105,"results":"74","hashOfConfig":"45"},{"size":2784,"mtime":1612371307089,"results":"75","hashOfConfig":"45"},{"size":2358,"mtime":1612371307089,"results":"76","hashOfConfig":"45"},{"size":133,"mtime":1612371307089,"results":"77","hashOfConfig":"45"},{"size":282,"mtime":1612371307089,"results":"78","hashOfConfig":"45"},{"size":268,"mtime":1612371307089,"results":"79","hashOfConfig":"45"},{"size":6371,"mtime":1612371307089,"results":"80","hashOfConfig":"45"},{"size":357,"mtime":1612371307105,"results":"81","hashOfConfig":"45"},{"size":143,"mtime":1612371307089,"results":"82","hashOfConfig":"45"},{"size":1610,"mtime":1612371307073,"results":"83","hashOfConfig":"45"},{"size":2802,"mtime":1612371307105,"results":"84","hashOfConfig":"45"},{"size":761,"mtime":1612371307105,"results":"85","hashOfConfig":"45"},{"size":1449,"mtime":1612371307089,"results":"86","hashOfConfig":"45"},{"size":3883,"mtime":1612416155491,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1h0mssi",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\index.js",[],["183","184"],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\App.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\reportWebVitals.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\routes\\Routes.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\store.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\genres\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx",["185"],"import React from 'react'\r\nimport styles from './AllSpecificGenre.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { genreSearchPerformer } from '../../redux/genres/action'\r\n\r\nconst AllSpecificGenre = () => {\r\n    const genreItems = useSelector(state => state.genre.genreItems)\r\n    const {genreType} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = genreType.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                genreItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            {...item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSpecificGenre}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx",["186"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { genreSearchPerformer} from '../../redux/genres/action'\r\nimport styles from './SpecificGenre.module.css'\r\n\r\nconst SpecificGenre = () => {\r\n    const {genreItems} = useSelector(state => state.genre, shallowEqual)\r\n    const {type} = useParams()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(type))\r\n    }, [])\r\n\r\n    const handleBook = (bookId) => {\r\n        history.push(`/book/show/${bookId}`)\r\n    }\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{type.toUpperCase()} BOOKS</h3>\r\n            <div className = {styles.bookContainer}>\r\n                {\r\n                    genreItems?.map((item, i) => {\r\n                        if(i < 15){\r\n                            const {imageLinks, title} = item.volumeInfo\r\n                            const src = imageLinks === undefined ? \"https://via.placeholder.com/110x180.png?text=No+image\" : imageLinks.smallThumbnail\r\n                            return(\r\n                                <img\r\n                                    onClick = {() => handleBook(item.id)}\r\n                                    key = {item.id}\r\n                                    className = {styles.img}\r\n                                    src =  {src}\r\n                                    alt = {title}\r\n                                ></img>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return null\r\n                        } \r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                genreItems?.length > 15 \r\n                ? <div className = {styles.linkDiv}>\r\n                    <Link className = {styles.link} to = {`/shelf/show/${type}`}>{`More ${type} books...`}</Link>\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {SpecificGenre}\r\n\r\n\r\n\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\genres\\Genres.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx",["187"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport styles from './ShowBookCard.module.css'\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { bookSearchPerformerByID } from '../../redux/search/action';\r\nimport { useParams } from 'react-router-dom';\r\nimport {GoGraph} from 'react-icons/go'\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nconst ShowBookCard = () => {\r\n    const {bookId} = useParams()\r\n    const dispatch = useDispatch()\r\n    const {selectedBook} = useSelector(state => state.book, shallowEqual)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformerByID(bookId))\r\n    }, [selectedBook])\r\n\r\n    if(selectedBook !== null){\r\n        const {volumeInfo} = selectedBook\r\n        const {title, authors, description, publisher, publishedDate, pageCount, averageRating, ratingsCount, imageLinks, infoLink} = volumeInfo\r\n        const src = imageLinks === \"undefined\" ? \"https://via.placeholder.com/150x220.png?text=No+image\" : imageLinks.smallThumbnail\r\n\r\n        const handlePage = () => {\r\n            window.open(infoLink, \"_blank\")\r\n        }\r\n\r\n        return (\r\n            <div className = {styles.container}>\r\n                <div className = {styles.left}>\r\n                    <img src = {src} alt = \"img\"></img>\r\n                </div>\r\n                <div className = {styles.right}>\r\n                    <h2>{title}</h2>\r\n                    <strong>by {authors?.map((item, i) => <span key = {i}>{item}</span>)}</strong>\r\n                    <div className = {styles.rating}>\r\n                        <StarRatings\r\n                            rating={averageRating || 0}\r\n                            starDimension=\"14px\"\r\n                            starSpacing=\"1px\"\r\n                            starRatedColor=\"#FA604A\"\r\n                        />\r\n                        {` ${averageRating || 0}`} ▪ <GoGraph className = {styles.icon}></GoGraph> Rating details ▪ {ratingsCount || \"No ratings\"} ratings\r\n                    </div>\r\n                    <div  className = {styles.description}>\r\n                        <ReactReadMoreReadLess\r\n                            charLimit={200}\r\n                            readMoreText={\"more\"}\r\n                            readLessText={\"(less)\"}\r\n                            readMoreClassName=\"read-more-less--more\"\r\n                            readLessClassName=\"read-more-less--less\"\r\n                        >\r\n                            {description}\r\n                        </ReactReadMoreReadLess>\r\n                    </div>\r\n                    <div className = {styles.getBook}>\r\n                        <h5>GET A BOOK</h5>\r\n                        <button onClick = {handlePage}>Google Books</button>\r\n                    </div>\r\n                    <div className = {styles.moreDetails}>\r\n                        <div>{pageCount} pages</div>\r\n                        <div>{`Published ${publishedDate} by ${publisher}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport {ShowBookCard}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\search\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchBar\\Search.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx",["188"],"import React from 'react'\r\nimport styles from './AllSearch.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { bookSearchPerformer } from '../../redux/search/action'\r\n\r\nconst AllSearch = () => {\r\n    const searchItems = useSelector(state => state.book.searchItems)\r\n    const {query} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = query.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                searchItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            {...item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSearch}\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\redux.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\reducer.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\redux.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\myBooks\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\actionTypes.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\landingPage\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\People.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\actionType.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx",["189","190","191"],"import React from \"react\";\r\nimport styles from \"./DiscussionPost.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostDis, getDataPost } from \"../../redux/Discussion/action\";\r\nconst DiscussionPost = () => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = React.useState({\r\n    bookname: \"\",\r\n    topic: \"\",\r\n    comment: \"\",\r\n    addBook: \"\",\r\n    author: \"\",\r\n  });\r\n  const handleAdd = (e) => {\r\n    const { name, value } = e.target;\r\n    setDetails({ ...details, [name]: value });\r\n  };\r\n  const handleSubmit = () => {\r\n    const payload = {\r\n      bookname,\r\n      topic,\r\n      comment,\r\n      addBook,\r\n      author,\r\n    };\r\n    dispatch(getPostDis(payload));\r\n    setDetails({\r\n      ...details,\r\n      bookname: \"\",\r\n      author: \"\",\r\n      topic: \"\",\r\n      comment: \"\",\r\n      addBook: \"\",\r\n    });\r\n  };\r\n  const { bookname, addBook, author, topic, comment } = details;\r\n  return (\r\n    <div>\r\n      <div className={styles.cont}>\r\n        <p className={styles.p1}>Post a New Discussion Topic</p>\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          Book this topic is about{\" \"}\r\n          <input\r\n            className={styles.input1}\r\n            type=\"text\"\r\n            placeholder=\"Start typing the new book name....\"\r\n            name=\"bookname\"\r\n            value={bookname}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <label className={styles.p3}>\r\n          topic\r\n          <br />\r\n          <input\r\n            className={styles.input2}\r\n            type=\"text\"\r\n            name=\"topic\"\r\n            value={topic}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <input type=\"checkbox\" />{\" \"}\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          this is a discussion question\r\n        </label>\r\n        <br />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p className={styles.p3}>commet</p>\r\n          <Link>\r\n            <p>add book/author</p>\r\n          </Link>\r\n        </div>\r\n        <textarea\r\n          name=\"\"\r\n          cols=\"58\"\r\n          rows=\"7\"\r\n          style={{ marginTop: \"-15px\" }}\r\n          name=\"comment\"\r\n          value={comment}\r\n          onChange={handleAdd}\r\n        ></textarea>\r\n        <br />\r\n        <Link to=\"/discussion/area\">\r\n          <button onClick={handleSubmit}>Post</button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Link>\r\n          <p>cancel</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DiscussionPost };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx",["192","193","194"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./DiscussionArea.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getDataPost,\r\n  Post1Dis,\r\n  getDataPost1,\r\n} from \"../../redux/Discussion/action\";\r\nconst DiscussionArea = () => {\r\n  const data = useSelector((state) => state.disPost.data);\r\n  const isLoading1 = useSelector((state) => state.disPost.isLoading1);\r\n  const isLoading2 = useSelector((state) => state.disPost.isLoading2);\r\n  const comments = useSelector((state) => state.disPost.comments);\r\n  console.log(\"comme\", comments);\r\n  const dispatch = useDispatch();\r\n  // React.useEffect(() => {\r\n  //   dispatch(getDataPost());\r\n  // }, []);\r\n  const [post, setPost] = React.useState(\"\");\r\n  const handlePost = () => {\r\n    const payload = {\r\n      post,\r\n    };\r\n    dispatch(Post1Dis(payload));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoading1 ? (\r\n        <div>.....isLoading</div>\r\n      ) : (\r\n        <div className={styles.cont}>\r\n          <h1>\r\n            <Link>{data.bookname}</Link> discussion\r\n          </h1>\r\n          <h3>topic:{data.topic}</h3>\r\n          <label htmlFor=\"\">\r\n            comment\r\n            <br />\r\n            <textarea\r\n              name=\"post\"\r\n              value={post}\r\n              onChange={(e) => setPost(e.target.value)}\r\n              cols=\"60\"\r\n              rows=\"5\"\r\n            ></textarea>\r\n          </label>\r\n          <br />\r\n          <button onClick={handlePost}>Post</button>\r\n          <div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <span>Comments (showing 1-1)</span>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{data.comment}</p>\r\n              </div>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{comments.comment}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionArea;\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Discussion.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Discussion\\Home.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\Trivia.jsx",["195","196"],"import React, { useState } from \"react\";\r\nimport styles from \"./Trivia.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getQuesData } from \"../../redux/Trivia/action\";\r\nimport TriviaQuestuion from \"./TriviaQuestuion\";\r\nimport axios from \"axios\";\r\nconst Trivia = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.trivia.question);\r\n  const isLoading = useSelector((state) => state.trivia.isLoading);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  React.useEffect(() => {\r\n    dispatch(getQuesData());\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getImages();\r\n  }, [currentIndex]);\r\n  const [images, setImages] = React.useState(\"\");\r\n  const [prevImages, setPrevImages] = React.useState(\"\");\r\n  const getImages = () => {\r\n    return axios\r\n      .get(\r\n        \"https://www.googleapis.com/books/v1/volumes?q=fantasy&AIzaSyB8wyhDZVXdQlGutVzyqQfsCA9dVhe0b4I\"\r\n      )\r\n      .then((res) => {\r\n        console.log(\r\n          \"goglebook\",\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setImages(\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setPrevImages(\r\n          res.data.items[currentIndex - 1].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err in google book api\");\r\n      });\r\n  };\r\n  const [recentQues, setRecentQues] = useState([]);\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [correct, setCorrect] = useState(\"\");\r\n  const [quesans, setQuesAns] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(0);\r\n  const handleAnswer = (answer) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    if (answer === data[currentIndex].correct_answer) {\r\n      setScore((prev) => prev + 1);\r\n      setCorrect(true);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    if (answer !== data[currentIndex].correct_answer) {\r\n      setCorrect(false);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    setRecentQues([data[currentIndex]]);\r\n  };\r\n  const handleSkip = (one) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    setSkipped((prev) => prev + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={styles.outer}>\r\n        <div className={styles.outer__left}>\r\n          <p className={styles.outer__left__heading}>Never-Ending Book Quiz</p>\r\n          <div className={styles.outer__left__recentQues}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"-5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              LAST ANWER\r\n            </p>\r\n            <hr />\r\n            <div className={styles.outer__left__recentQues1}>\r\n              {recentQues.length > 0 ? (\r\n                <div>\r\n                  <p style={{ fontSize: \"15px\" }}>{recentQues[0].question}</p>\r\n                  <img\r\n                    src={prevImages}\r\n                    alt=\"images\"\r\n                    width=\"70px\"\r\n                    height=\"70px\"\r\n                  />\r\n                  <h3>Answer Res</h3>\r\n                  <p>\r\n                    {correct === true ? (\r\n                      <p style={{ color: \"green\", fontSize: \"19px\" }}>\r\n                        \"You got it Right!\"\r\n                      </p>\r\n                    ) : (\r\n                      <p style={{ color: \"red\", fontSize: \"19px\" }}>\r\n                        {\" \"}\r\n                        \"You got it Wrong!\"\r\n                      </p>\r\n                    )}\r\n                  </p>\r\n                  <p style={{ color: \"green\" }}>\r\n                    a.{recentQues[0].correct_answer}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    b.{recentQues[0].incorrect_answers[0]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    c.{recentQues[0].incorrect_answers[1]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    d.{recentQues[0].incorrect_answers[2]}\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p className={styles.outer__left__loadingParts}>\r\n                    Answer the question to the right to see the results!\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.myStats}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"-5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              MY STATS\r\n            </p>\r\n            <hr />\r\n            <p className={styles.static}>question answerd:{quesans}</p>\r\n            <p className={styles.static}>correct:{score}</p>\r\n            <p className={styles.static}>skipped:{skipped}</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.outer__right}>\r\n          <div className={styles.outer__right__search}>\r\n            <Link to=\"/trivia\">\r\n              <p>All Trivia</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/booksection\">\r\n              <p>My Books</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/homePage\">\r\n              <p>Browse</p>\r\n            </Link>\r\n            <input type=\"text\" placeholder=\"Find the books.....\" />\r\n            <button>Search</button>\r\n          </div>\r\n          <div className={styles.outer__right__quiz__heading}>\r\n            <p style={{ fontWeight: \"700\", fontSize: \"13px\" }}>\r\n              TRIVIA QUESTIONS\r\n            </p>\r\n            <Link to=\"/addQuestion\">\r\n              <p style={{ fontSize: \"10px\" }}>Add a questions</p>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.outer__right__quiz}>\r\n            {isLoading ? (\r\n              <div>\r\n                <h1>Quiz is Loading guys.......</h1>\r\n              </div>\r\n            ) : (\r\n              <TriviaQuestuion\r\n                data={data[currentIndex]}\r\n                handleAnswer={handleAnswer}\r\n                handleSkip={handleSkip}\r\n                images={images}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Trivia };\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\peoplePage\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\people\\people.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Discussion\\action.js",["197","198","199"],"import * as ActionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nconst getReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST_REQ,\r\n  };\r\n};\r\nconst getSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getDataReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_REQ,\r\n  };\r\n};\r\nconst getDataSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getDataFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_FAIL,\r\n    payload,\r\n  };\r\n};\r\nexport const getPostDis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(getReq());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/posts\", {\r\n      bookname: payload.bookname,\r\n      topic: payload.topic,\r\n      comment: payload.comment,\r\n      addBook: payload.addBook,\r\n      author: payload.author,\r\n      id: 1,\r\n    })\r\n    .then((res) => {\r\n      dispatch(getDataReq());\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/posts/1\")\r\n        .then((res) => {\r\n          console.log(\"res\", res.data);\r\n          dispatch(getDataSuccess(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getDataFail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getFail(err));\r\n    });\r\n};\r\n// export const getDataPost = (payload) => (dispatch) => {\r\n\r\n//   return axios\r\n\r\n// };\r\n//for the particular comment to post\r\n\r\nconst postReq1 = () => {\r\n  return {\r\n    type: ActionTypes.POST1_REQ,\r\n  };\r\n};\r\nconst postSuccess1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst postFail1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Req = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_REQ,\r\n  };\r\n};\r\nconst getPost1Success = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Fail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const Post1Dis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(postReq1());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/postcomments\", {\r\n      comment: payload.post,\r\n    })\r\n    .then((res) => {\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/postcomments/4\")\r\n        .then((res) => {\r\n          dispatch(getPost1Success(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getPost1Fail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(postFail1(err));\r\n    });\r\n};\r\n","C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\redux\\Trivia\\action.js",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx",[],"C:\\Users\\Saravana J N\\Desktop\\Unit_3_project\\good_reads\\src\\components\\MyBooksCard\\Navbar\\Navbar.jsx",["200"],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":16,"column":8,"nodeType":"207","endLine":16,"endColumn":10,"suggestions":"208"},{"ruleId":"205","severity":1,"message":"209","line":15,"column":8,"nodeType":"207","endLine":15,"endColumn":10,"suggestions":"210"},{"ruleId":"205","severity":1,"message":"211","line":17,"column":8,"nodeType":"207","endLine":17,"endColumn":22,"suggestions":"212"},{"ruleId":"205","severity":1,"message":"206","line":16,"column":8,"nodeType":"207","endLine":16,"endColumn":10,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":3,"column":16,"nodeType":"216","messageId":"217","endLine":3,"endColumn":24},{"ruleId":"214","severity":1,"message":"218","line":5,"column":22,"nodeType":"216","messageId":"217","endLine":5,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":90,"column":11,"nodeType":"221","endLine":90,"endColumn":25},{"ruleId":"214","severity":1,"message":"218","line":6,"column":3,"nodeType":"216","messageId":"217","endLine":6,"endColumn":14},{"ruleId":"214","severity":1,"message":"222","line":8,"column":3,"nodeType":"216","messageId":"217","endLine":8,"endColumn":15},{"ruleId":"214","severity":1,"message":"223","line":13,"column":9,"nodeType":"216","messageId":"217","endLine":13,"endColumn":19},{"ruleId":"205","severity":1,"message":"224","line":15,"column":6,"nodeType":"207","endLine":15,"endColumn":8,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"226","line":18,"column":6,"nodeType":"207","endLine":18,"endColumn":20,"suggestions":"227"},{"ruleId":"214","severity":1,"message":"228","line":8,"column":7,"nodeType":"216","messageId":"217","endLine":8,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":77,"column":7,"nodeType":"216","messageId":"217","endLine":77,"endColumn":19},{"ruleId":"214","severity":1,"message":"230","line":89,"column":7,"nodeType":"216","messageId":"217","endLine":89,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":12,"column":21,"nodeType":"233","endLine":12,"endColumn":216},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'endpoint'. Either include them or remove the dependency array.","ArrayExpression",["236"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'type'. Either include them or remove the dependency array.",["237"],"React Hook React.useEffect has missing dependencies: 'bookId' and 'dispatch'. Either include them or remove the dependency array.",["238"],["239"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'getDataPost' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'getDataPost1' is defined but never used.","'isLoading2' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["240"],"React Hook React.useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["241"],"'getSuccess' is assigned a value but never used.","'postSuccess1' is assigned a value but never used.","'getPost1Req' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"242","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [dispatch, endpoint]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, type]",{"range":"255","text":"256"},"Update the dependencies array to be: [bookId, dispatch, selectedBook]",{"range":"257","text":"258"},{"range":"259","text":"254"},"Update the dependencies array to be: [dispatch]",{"range":"260","text":"261"},"Update the dependencies array to be: [currentIndex, getImages]",{"range":"262","text":"263"},[638,640],"[dispatch, endpoint]",[568,570],"[dispatch, type]",[679,693],"[bookId, dispatch, selectedBook]",[615,617],[629,631],"[dispatch]",[685,699],"[currentIndex, getImages]"]