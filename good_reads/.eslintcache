[{"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\index.js":"1","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\App.js":"2","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\reportWebVitals.js":"3","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\store.js":"4","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\reducer.js":"5","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\reducer.js":"6","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\reducer.js":"7","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\redux.js":"8","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js":"9","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js":"10","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\redux.js":"11","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\routes\\Routes.jsx":"12","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\actionTypes.js":"13","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\actionType.js":"14","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\actionType.js":"15","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\actionTypes.js":"16","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\actionTypes.js":"17","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\actionType.js":"18","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\people\\People.jsx":"19","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\actionTypes.js":"20","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx":"21","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\genres\\Genres.jsx":"22","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx":"23","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx":"24","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\Discussion.jsx":"25","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx":"26","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\Home.jsx":"27","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx":"28","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Trivia\\Trivia.jsx":"29","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx":"30","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx":"31","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\action.js":"32","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\people\\people.js":"33","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Footer\\Footer.jsx":"34","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\action.js":"35","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\action.js":"36","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\action.js":"37","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\action.js":"38","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx":"39","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx":"40","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allOption\\main\\Main.jsx":"41","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allOption\\Group\\Group.jsx":"42","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\allOption_reducers.js":"43","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\actionType.js":"44","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\action.js":"45","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\searchBar\\Search.jsx":"46","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx":"47","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Landing_page\\LandingPage.jsx":"48","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\action.js":"49","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\readButton\\ReadButton.jsx":"50","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\postReducer.js":"51","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Home\\Home.jsx":"52","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Navbar\\Navbar.jsx":"53","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\MyBooks\\MyBooks.jsx":"54","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\actionType.js":"55","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\action.js":"56","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\action.js":"57","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Post\\Post.jsx":"58","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\MyBooksCard\\MyBooksCard.jsx":"59","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\messaging\\chat\\Chat.jsx":"60"},{"size":741,"mtime":1612371234703,"results":"61","hashOfConfig":"62"},{"size":249,"mtime":1612380892224,"results":"63","hashOfConfig":"62"},{"size":375,"mtime":1612371234744,"results":"64","hashOfConfig":"62"},{"size":1388,"mtime":1612444098355,"results":"65","hashOfConfig":"62"},{"size":1548,"mtime":1612371234733,"results":"66","hashOfConfig":"62"},{"size":1423,"mtime":1612371234738,"results":"67","hashOfConfig":"62"},{"size":1532,"mtime":1612371234743,"results":"68","hashOfConfig":"62"},{"size":1723,"mtime":1612371234728,"results":"69","hashOfConfig":"62"},{"size":542,"mtime":1612458963457,"results":"70","hashOfConfig":"62"},{"size":343,"mtime":1612371234740,"results":"71","hashOfConfig":"62"},{"size":652,"mtime":1612371234731,"results":"72","hashOfConfig":"62"},{"size":3570,"mtime":1612454118590,"results":"73","hashOfConfig":"62"},{"size":228,"mtime":1612371234733,"results":"74","hashOfConfig":"62"},{"size":165,"mtime":1612371234737,"results":"75","hashOfConfig":"62"},{"size":100,"mtime":1612371234735,"results":"76","hashOfConfig":"62"},{"size":544,"mtime":1612371234728,"results":"77","hashOfConfig":"62"},{"size":226,"mtime":1612371234742,"results":"78","hashOfConfig":"62"},{"size":46,"mtime":1612371234739,"results":"79","hashOfConfig":"62"},{"size":2531,"mtime":1612432954257,"results":"80","hashOfConfig":"62"},{"size":145,"mtime":1612371234730,"results":"81","hashOfConfig":"62"},{"size":1098,"mtime":1612371234718,"results":"82","hashOfConfig":"62"},{"size":1114,"mtime":1612432576367,"results":"83","hashOfConfig":"62"},{"size":1127,"mtime":1612371234719,"results":"84","hashOfConfig":"62"},{"size":2139,"mtime":1612432576371,"results":"85","hashOfConfig":"62"},{"size":282,"mtime":1612371234705,"results":"86","hashOfConfig":"62"},{"size":2784,"mtime":1612371234707,"results":"87","hashOfConfig":"62"},{"size":268,"mtime":1612371234708,"results":"88","hashOfConfig":"62"},{"size":2358,"mtime":1612371234705,"results":"89","hashOfConfig":"62"},{"size":6371,"mtime":1612371234715,"results":"90","hashOfConfig":"62"},{"size":133,"mtime":1612371234713,"results":"91","hashOfConfig":"62"},{"size":3265,"mtime":1612446581364,"results":"92","hashOfConfig":"62"},{"size":357,"mtime":1612371234738,"results":"93","hashOfConfig":"62"},{"size":143,"mtime":1612371234723,"results":"94","hashOfConfig":"62"},{"size":1610,"mtime":1612371234685,"results":"95","hashOfConfig":"62"},{"size":761,"mtime":1612371234730,"results":"96","hashOfConfig":"62"},{"size":1600,"mtime":1612371234741,"results":"97","hashOfConfig":"62"},{"size":1149,"mtime":1612371234732,"results":"98","hashOfConfig":"62"},{"size":2802,"mtime":1612371234727,"results":"99","hashOfConfig":"62"},{"size":1449,"mtime":1612371234716,"results":"100","hashOfConfig":"62"},{"size":1672,"mtime":1612441045210,"results":"101","hashOfConfig":"62"},{"size":2769,"mtime":1612444098354,"results":"102","hashOfConfig":"62"},{"size":6939,"mtime":1612453517227,"results":"103","hashOfConfig":"62"},{"size":354,"mtime":1612415600342,"results":"104","hashOfConfig":"62"},{"size":49,"mtime":1612413723273,"results":"105","hashOfConfig":"62"},{"size":500,"mtime":1612417681125,"results":"106","hashOfConfig":"62"},{"size":3030,"mtime":1612371234690,"results":"107","hashOfConfig":"62"},{"size":990,"mtime":1612371234697,"results":"108","hashOfConfig":"62"},{"size":5212,"mtime":1612433373888,"results":"109","hashOfConfig":"62"},{"size":746,"mtime":1612371234734,"results":"110","hashOfConfig":"62"},{"size":1194,"mtime":1612441045209,"results":"111","hashOfConfig":"62"},{"size":1752,"mtime":1612444098355,"results":"112","hashOfConfig":"62"},{"size":1464,"mtime":1612444098352,"results":"113","hashOfConfig":"62"},{"size":3887,"mtime":1612444098350,"results":"114","hashOfConfig":"62"},{"size":6764,"mtime":1612444098353,"results":"115","hashOfConfig":"62"},{"size":350,"mtime":1612444098355,"results":"116","hashOfConfig":"62"},{"size":2007,"mtime":1612444612655,"results":"117","hashOfConfig":"62"},{"size":755,"mtime":1612444342707,"results":"118","hashOfConfig":"62"},{"size":5981,"mtime":1612444098351,"results":"119","hashOfConfig":"62"},{"size":2039,"mtime":1612371234686,"results":"120","hashOfConfig":"62"},{"size":3812,"mtime":1612466931885,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"hcfqu5",{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"124"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\index.js",[],["263","264"],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\App.js",["265"],"import React from 'react'\r\nimport './App.css'\r\nimport { Main } from './pages/allOption/main/Main'\r\nimport { Routes } from './routes/Routes'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Routes/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\reportWebVitals.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\store.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\reducer.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\reducer.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\reducer.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\redux.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\landingPage_reducers.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\peoplePage_reducers.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\redux.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\routes\\Routes.jsx",["266","267"],"import React from \"react\";\r\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { ShowBookCard } from \"../components/showBookCard/ShowBookCard\";\r\nimport { AllSearch } from \"../pages/allSearch/AllSearch\";\r\nimport { AllSpecificGenre } from \"../pages/allSpecificGenre/AllSpecificGenre\";\r\nimport { Genres } from \"../pages/genres/Genres\";\r\nimport { SpecificGenre } from \"../pages/specificGenre/SpecificGenre\";\r\nimport { Discussion } from \"../pages/Discussion/Discussion\";\r\nimport { DiscussionPost } from \"../pages/Discussion/DiscussionPost\";\r\n// import { Home } from \"../pages/Discussion/Home\";\r\nimport { Home } from \"../pages/Home/Home\";\r\nimport DiscussionArea from \"../pages/Discussion/DiscussionArea\";\r\nimport { Trivia } from \"../pages/Trivia/Trivia\";\r\nimport { People } from \"../pages/people/People.jsx\";\r\nimport { PeopleShow } from \"../pages/PeopleShow/PeopleShow\";\r\nimport { Navbar } from \"../components/Navbar/Navbar\";\r\nimport { MyBooks } from \"../pages/MyBooks/MyBooks\";\r\nimport { LandingPage } from \"../pages/Landing_page/LandingPage\";\r\nimport { Footer } from \"../components/Footer/Footer\";\r\nimport { Group } from \"../pages/allOption/Group/Group\";\r\nimport { Main } from \"../pages/allOption/main/Main\";\r\nimport { Chat } from \"../pages/messaging/chat/Chat\";\r\n\r\nconst Routes = () => {\r\n  let { path } = useRouteMatch();\r\n\r\n  console.log(path);\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar></Navbar>\r\n      <Switch>\r\n        {/* <Route exact path=\"/login\">\r\n                    <LandingPage/>\r\n                </Route> */}\r\n        <Route exact path=\"/genres\">\r\n          <Genres></Genres>\r\n        </Route>\r\n        <Route exact path=\"/genre/:type\">\r\n          <SpecificGenre></SpecificGenre>\r\n        </Route>\r\n        <Route exact path=\"/shelf/show/:genreType\">\r\n          <AllSpecificGenre></AllSpecificGenre>\r\n        </Route>\r\n        <Route exact path=\"/book/show/:bookId\">\r\n          <ShowBookCard></ShowBookCard>\r\n        </Route>\r\n        <Route path=\"/search/:query\">\r\n          <AllSearch></AllSearch>\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/mybooks\">\r\n          <MyBooks />\r\n        </Route>\r\n        <Route exact path=\"/discussion\">\r\n          <Discussion />\r\n        </Route>\r\n        <Route exact path=\"/discussion/post\">\r\n          <DiscussionPost />\r\n        </Route>\r\n        <Route exact path=\"/discussion/area\">\r\n          <DiscussionArea />\r\n        </Route>\r\n        <Route exact path=\"/trivia\">\r\n          <Trivia />\r\n        </Route>\r\n        <Route exact path=\"/people\">\r\n          <People></People>\r\n        </Route>\r\n        <Route exact path=\"/people/show/:id\">\r\n          <PeopleShow />\r\n        </Route>\r\n        <Route exact path=\"/group\">\r\n          <Main />\r\n        </Route>\r\n        <Route exact path=\"/group/:g/:q\">\r\n          <Group />\r\n        </Route>\r\n        <Route exact path=\"/chat\"> \r\n                    <Chat/>\r\n        </Route>\r\n\r\n        <Route>\r\n          <p style={{textAlign:\"center\"}}>\r\n          <h1>Sorry, you’ve reached the end of the sidewalk.</h1><br/><br/>\r\n            Yes we’ll walk with a walk that is measured and slow, And we’ll go<br/>\r\n            where the chalk-white arrows go, For the children, they mark, and<br/>\r\n            the children, they know The place where the sidewalk ends.<br/><br/>\r\n            - Silverstein, Where the Sidewalk Ends\r\n          </p>\r\n        </Route>\r\n      </Switch>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Routes };\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\actionTypes.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\actionType.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\actionType.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\actionTypes.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\actionTypes.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\actionType.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\people\\People.jsx",["268"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport { getPeopleData } from \"../../redux/peoplePage/action\";\r\nimport { num } from \"./people\";\r\nimport style from \"./people.module.css\";\r\nexport const People = () => {\r\n  const [follow,setFollow] = React.useState(false)\r\n  const data = useSelector(state=>state.peopleData)\r\n  const dispatch = useDispatch()\r\n  React.useEffect(()=>{\r\n      dispatch(getPeopleData())\r\n  },[dispatch])\r\n\r\n  const handlefollow =()=>{\r\n    setFollow(!follow)\r\n  }\r\n  return (\r\n    <>\r\n    <>\r\n      <div className={style.box1}>\r\n        <br />\r\n        <h2>Most popular 100 reviewers this week</h2>\r\n        <br />\r\n        <p>\r\n          this week{\" \"}\r\n          <h style={{ opacity: \"0.5\" }}>(generated Jan 27, 2021 12:29PM)</h>\r\n        </p>\r\n        <br />\r\n        <p style={{ fontSize: \"13px\" }}>\r\n          <h>this week</h> | <h>this month</h> | <h>last 12 months</h> |{\" \"}\r\n          <h>all</h>{\" \"}\r\n        </p>\r\n        <br />\r\n      </div>\r\n      <div className={style.profileBox}>\r\n       {\r\n         data.userdata?.map(item =>{\r\n          return  <>\r\n        <div className={style.container}>\r\n        <div className={style.numberbox}>\r\n          <p>1.</p>\r\n        </div>\r\n        <div className={style.imgContainer}>\r\n          <img src={item.image_url} alt=\"alt\" />\r\n        </div>\r\n        <div className={style.detailsContainer}>\r\n          <p style={{ color: \"#00635d\" }}><Link to={`people/show/${item.id}`}>{item.name}</Link></p>\r\n          <p>city</p>\r\n          <p style={{ color: \"#00635d\" }}>{item.private_shelf.length} books | {item.following.length} friends</p>\r\n        </div>\r\n        <div\r\n          style={{ marginLeft: \"50px\" }}\r\n          className={style.detailsContainer}\r\n        >\r\n          <p style={{ color: \"#00635d\" }}> {num()} votes this week</p>\r\n          <p style={{ color: \"#00635d\" }} onClick={handlefollow}>{follow?\"Unfollow reviews\":\"Follow reviews\"}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n         })\r\n       }\r\n        \r\n      </div>\r\n      <div className={style.meetpeoplebox}>\r\n        <p>Meet People</p>\r\n        <p style={{ fontSize: \"13px\", color: \"#00635d\" }}>\r\n          top readers\r\n          <br /> top reviewers <br />\r\n          most popular reviewers\r\n          <br /> most followed top librarians\r\n          <br /> recent reviews\r\n        </p>\r\n      </div>\r\n      </>\r\n    </>\r\n    \r\n  );\r\n};\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\actionTypes.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allSearch\\AllSearch.jsx",["269"],"import React from 'react'\r\nimport styles from './AllSearch.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { bookSearchPerformer } from '../../redux/search/action'\r\n\r\nconst AllSearch = () => {\r\n    const searchItems = useSelector(state => state.book.searchItems)\r\n    const {query} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = query.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                searchItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            {...item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSearch}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\genres\\Genres.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allSpecificGenre\\AllSpecificGenre.jsx",["270"],"import React from 'react'\r\nimport styles from './AllSpecificGenre.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\r\nimport { genreSearchPerformer } from '../../redux/genres/action'\r\n\r\nconst AllSpecificGenre = () => {\r\n    const genreItems = useSelector(state => state.genre.genreItems)\r\n    const {genreType} = useParams()\r\n    const dispatch = useDispatch()\r\n    let endpoint = genreType.replace(/%20/g, \" \")\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(endpoint))\r\n    }, [])\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\r\n            {\r\n                genreItems?.map((item) => {\r\n                    return(\r\n                        <ShelfBookCard\r\n                            key = {item.id}\r\n                            {...item}\r\n                        ></ShelfBookCard>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AllSpecificGenre}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\specificGenre\\SpecificGenre.jsx",["271"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { genreSearchPerformer} from '../../redux/genres/action'\r\nimport styles from './SpecificGenre.module.css'\r\n\r\nconst SpecificGenre = () => {\r\n    const {genreItems} = useSelector(state => state.genre, shallowEqual)\r\n    const {type} = useParams()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(genreSearchPerformer(type))\r\n    }, [])\r\n\r\n    const handleBook = (bookId) => {\r\n        history.push(`/book/show/${bookId}`)\r\n    }\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <h3>{type.toUpperCase()} BOOKS</h3>\r\n            <div className = {styles.bookContainer}>\r\n                {\r\n                    genreItems?.map((item, i) => {\r\n                        if(i < 15){\r\n                            const {imageLinks, title} = item.volumeInfo\r\n                            const src = imageLinks === undefined ? \"https://via.placeholder.com/110x180.png?text=No+image\" : imageLinks.smallThumbnail\r\n                            return(\r\n                                <img\r\n                                    onClick = {() => handleBook(item.id)}\r\n                                    key = {item.id}\r\n                                    className = {styles.img}\r\n                                    src =  {src}\r\n                                    alt = {title}\r\n                                ></img>\r\n                            )\r\n                        }\r\n                        else{\r\n                            return null\r\n                        } \r\n                    })\r\n                }\r\n                {\r\n                    genreItems?.length > 15 \r\n                    ? <div>\r\n                        <Link to = {`/shelf/show/${type}`}>{`More ${type} books`}</Link>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {SpecificGenre}\r\n\r\n\r\n\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\Discussion.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\DiscussionPost.jsx",["272","273","274"],"import React from \"react\";\r\nimport styles from \"./DiscussionPost.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostDis, getDataPost } from \"../../redux/Discussion/action\";\r\nconst DiscussionPost = () => {\r\n  const dispatch = useDispatch();\r\n  const [details, setDetails] = React.useState({\r\n    bookname: \"\",\r\n    topic: \"\",\r\n    comment: \"\",\r\n    addBook: \"\",\r\n    author: \"\",\r\n  });\r\n  const handleAdd = (e) => {\r\n    const { name, value } = e.target;\r\n    setDetails({ ...details, [name]: value });\r\n  };\r\n  const handleSubmit = () => {\r\n    const payload = {\r\n      bookname,\r\n      topic,\r\n      comment,\r\n      addBook,\r\n      author,\r\n    };\r\n    dispatch(getPostDis(payload));\r\n    setDetails({\r\n      ...details,\r\n      bookname: \"\",\r\n      author: \"\",\r\n      topic: \"\",\r\n      comment: \"\",\r\n      addBook: \"\",\r\n    });\r\n  };\r\n  const { bookname, addBook, author, topic, comment } = details;\r\n  return (\r\n    <div>\r\n      <div className={styles.cont}>\r\n        <p className={styles.p1}>Post a New Discussion Topic</p>\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          Book this topic is about{\" \"}\r\n          <input\r\n            className={styles.input1}\r\n            type=\"text\"\r\n            placeholder=\"Start typing the new book name....\"\r\n            name=\"bookname\"\r\n            value={bookname}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <label className={styles.p3}>\r\n          topic\r\n          <br />\r\n          <input\r\n            className={styles.input2}\r\n            type=\"text\"\r\n            name=\"topic\"\r\n            value={topic}\r\n            onChange={handleAdd}\r\n          />\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <input type=\"checkbox\" />{\" \"}\r\n        <label htmlFor=\"\" className={styles.p2}>\r\n          this is a discussion question\r\n        </label>\r\n        <br />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p className={styles.p3}>commet</p>\r\n          <Link>\r\n            <p>add book/author</p>\r\n          </Link>\r\n        </div>\r\n        <textarea\r\n          name=\"\"\r\n          cols=\"58\"\r\n          rows=\"7\"\r\n          style={{ marginTop: \"-15px\" }}\r\n          name=\"comment\"\r\n          value={comment}\r\n          onChange={handleAdd}\r\n        ></textarea>\r\n        <br />\r\n        <Link to=\"/discussion/area\">\r\n          <button onClick={handleSubmit}>Post</button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Link>\r\n          <p>cancel</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DiscussionPost };\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\Home.jsx",[],["275","276"],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Discussion\\DiscussionArea.jsx",["277","278","279"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./DiscussionArea.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getDataPost,\r\n  Post1Dis,\r\n  getDataPost1,\r\n} from \"../../redux/Discussion/action\";\r\nconst DiscussionArea = () => {\r\n  const data = useSelector((state) => state.disPost.data);\r\n  const isLoading1 = useSelector((state) => state.disPost.isLoading1);\r\n  const isLoading2 = useSelector((state) => state.disPost.isLoading2);\r\n  const comments = useSelector((state) => state.disPost.comments);\r\n  console.log(\"comme\", comments);\r\n  const dispatch = useDispatch();\r\n  // React.useEffect(() => {\r\n  //   dispatch(getDataPost());\r\n  // }, []);\r\n  const [post, setPost] = React.useState(\"\");\r\n  const handlePost = () => {\r\n    const payload = {\r\n      post,\r\n    };\r\n    dispatch(Post1Dis(payload));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoading1 ? (\r\n        <div>.....isLoading</div>\r\n      ) : (\r\n        <div className={styles.cont}>\r\n          <h1>\r\n            <Link>{data.bookname}</Link> discussion\r\n          </h1>\r\n          <h3>topic:{data.topic}</h3>\r\n          <label htmlFor=\"\">\r\n            comment\r\n            <br />\r\n            <textarea\r\n              name=\"post\"\r\n              value={post}\r\n              onChange={(e) => setPost(e.target.value)}\r\n              cols=\"60\"\r\n              rows=\"5\"\r\n            ></textarea>\r\n          </label>\r\n          <br />\r\n          <button onClick={handlePost}>Post</button>\r\n          <div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n              <span>Comments (showing 1-1)</span>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{data.comment}</p>\r\n              </div>\r\n              <div>\r\n                <div className={styles.divPostHeading}>\r\n                  <p>\r\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\r\n                  </p>\r\n                </div>\r\n                <p>{comments.comment}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiscussionArea;\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Trivia\\Trivia.jsx",["280","281"],"import React, { useState } from \"react\";\r\nimport styles from \"./Trivia.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getQuesData } from \"../../redux/Trivia/action\";\r\nimport TriviaQuestuion from \"./TriviaQuestuion\";\r\nimport axios from \"axios\";\r\nconst Trivia = () => {\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.trivia.question);\r\n  const isLoading = useSelector((state) => state.trivia.isLoading);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  React.useEffect(() => {\r\n    dispatch(getQuesData());\r\n  }, []);\r\n  React.useEffect(() => {\r\n    getImages();\r\n  }, [currentIndex]);\r\n  const [images, setImages] = React.useState(\"\");\r\n  const [prevImages, setPrevImages] = React.useState(\"\");\r\n  const getImages = () => {\r\n    return axios\r\n      .get(\r\n        \"https://www.googleapis.com/books/v1/volumes?q=fantasy&AIzaSyB8wyhDZVXdQlGutVzyqQfsCA9dVhe0b4I\"\r\n      )\r\n      .then((res) => {\r\n        console.log(\r\n          \"goglebook\",\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setImages(\r\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n        setPrevImages(\r\n          res.data.items[currentIndex - 1].volumeInfo.imageLinks.smallThumbnail\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err in google book api\");\r\n      });\r\n  };\r\n  const [recentQues, setRecentQues] = useState([]);\r\n\r\n  const [score, setScore] = useState(0);\r\n  const [correct, setCorrect] = useState(\"\");\r\n  const [quesans, setQuesAns] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(0);\r\n  const handleAnswer = (answer) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    if (answer === data[currentIndex].correct_answer) {\r\n      setScore((prev) => prev + 1);\r\n      setCorrect(true);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    if (answer !== data[currentIndex].correct_answer) {\r\n      setCorrect(false);\r\n      setQuesAns((prev) => prev + 1);\r\n    }\r\n    setRecentQues([data[currentIndex]]);\r\n  };\r\n  const handleSkip = (one) => {\r\n    setCurrentIndex((prev) => prev + 1);\r\n    setSkipped((prev) => prev + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={styles.outer}>\r\n        <div className={styles.outer__left}>\r\n          <p className={styles.outer__left__heading}>Never-Ending Book Quiz</p>\r\n          <div className={styles.outer__left__recentQues}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"-5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              LAST ANWER\r\n            </p>\r\n            <hr />\r\n            <div className={styles.outer__left__recentQues1}>\r\n              {recentQues.length > 0 ? (\r\n                <div>\r\n                  <p style={{ fontSize: \"15px\" }}>{recentQues[0].question}</p>\r\n                  <img\r\n                    src={prevImages}\r\n                    alt=\"images\"\r\n                    width=\"70px\"\r\n                    height=\"70px\"\r\n                  />\r\n                  <h3>Answer Res</h3>\r\n                  <p>\r\n                    {correct === true ? (\r\n                      <p style={{ color: \"green\", fontSize: \"19px\" }}>\r\n                        \"You got it Right!\"\r\n                      </p>\r\n                    ) : (\r\n                      <p style={{ color: \"red\", fontSize: \"19px\" }}>\r\n                        {\" \"}\r\n                        \"You got it Wrong!\"\r\n                      </p>\r\n                    )}\r\n                  </p>\r\n                  <p style={{ color: \"green\" }}>\r\n                    a.{recentQues[0].correct_answer}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    b.{recentQues[0].incorrect_answers[0]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    c.{recentQues[0].incorrect_answers[1]}\r\n                  </p>\r\n                  <p style={{ color: \"red\" }}>\r\n                    d.{recentQues[0].incorrect_answers[2]}\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p className={styles.outer__left__loadingParts}>\r\n                    Answer the question to the right to see the results!\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className={styles.myStats}>\r\n            <p\r\n              style={{\r\n                marginBottom: \"-5px\",\r\n                fontSize: \"13px\",\r\n                fontWeight: \"700\",\r\n              }}\r\n            >\r\n              MY STATS\r\n            </p>\r\n            <hr />\r\n            <p className={styles.static}>question answerd:{quesans}</p>\r\n            <p className={styles.static}>correct:{score}</p>\r\n            <p className={styles.static}>skipped:{skipped}</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.outer__right}>\r\n          <div className={styles.outer__right__search}>\r\n            <Link to=\"/trivia\">\r\n              <p>All Trivia</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/booksection\">\r\n              <p>My Books</p>\r\n            </Link>\r\n            |\r\n            <Link to=\"/homePage\">\r\n              <p>Browse</p>\r\n            </Link>\r\n            <input type=\"text\" placeholder=\"Find the books.....\" />\r\n            <button>Search</button>\r\n          </div>\r\n          <div className={styles.outer__right__quiz__heading}>\r\n            <p style={{ fontWeight: \"700\", fontSize: \"13px\" }}>\r\n              TRIVIA QUESTIONS\r\n            </p>\r\n            <Link to=\"/addQuestion\">\r\n              <p style={{ fontSize: \"10px\" }}>Add a questions</p>\r\n            </Link>\r\n          </div>\r\n          <div className={styles.outer__right__quiz}>\r\n            {isLoading ? (\r\n              <div>\r\n                <h1>Quiz is Loading guys.......</h1>\r\n              </div>\r\n            ) : (\r\n              <TriviaQuestuion\r\n                data={data[currentIndex]}\r\n                handleAnswer={handleAnswer}\r\n                handleSkip={handleSkip}\r\n                images={images}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Trivia };\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\PeopleShow\\PeopleShow.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\showBookCard\\ShowBookCard.jsx",["282"],"import React from 'react'\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport styles from './ShowBookCard.module.css'\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { bookSearchPerformerByID } from '../../redux/search/action';\r\nimport { useParams } from 'react-router-dom';\r\nimport {GoGraph} from 'react-icons/go'\r\nimport StarRatings from 'react-star-ratings';\r\nimport { ReadButton } from '../readButton/ReadButton'\r\n\r\nconst ShowBookCard = () => {\r\n    const {bookId} = useParams()\r\n    const dispatch = useDispatch()\r\n    const {selectedBook} = useSelector(state => state.book, shallowEqual)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(bookSearchPerformerByID(bookId))\r\n    }, [bookId])\r\n\r\n    if(selectedBook !== null){\r\n        const {volumeInfo} = selectedBook\r\n        const {title, authors, description, publisher, publishedDate, pageCount, averageRating, ratingsCount, imageLinks, infoLink} = volumeInfo\r\n        const src = imageLinks === \"undefined\" ? \"https://via.placeholder.com/150x220.png?text=No+image\" : imageLinks.smallThumbnail\r\n\r\n        const handlePage = () => {\r\n            window.open(infoLink, \"_blank\")\r\n        }\r\n\r\n        return (\r\n            <div className = {styles.container}>\r\n                <div className = {styles.left}>\r\n                    <img src = {src} alt = \"img\"></img>\r\n                    <ReadButton className = {styles.readButton}></ReadButton>\r\n                </div>\r\n                <div className = {styles.right}>\r\n                    <h2>{title}</h2>\r\n                    <strong>by {authors?.map((item, i) => <span key = {i}>{item}</span>)}</strong>\r\n                    <div className = {styles.rating}>\r\n                        <StarRatings\r\n                            rating={averageRating || 0}\r\n                            starDimension=\"14px\"\r\n                            starSpacing=\"1px\"\r\n                            starRatedColor=\"#FA604A\"\r\n                        />\r\n                        {` ${averageRating || 0}`} ▪ <GoGraph className = {styles.icon}></GoGraph> Rating details ▪ {ratingsCount || \"No ratings\"} ratings\r\n                    </div>\r\n                    <div  className = {styles.description}>\r\n                        <ReactReadMoreReadLess\r\n                            charLimit={200}\r\n                            readMoreText={\"more\"}\r\n                            readLessText={\"(less)\"}\r\n                            readMoreClassName=\"read-more-less--more\"\r\n                            readLessClassName=\"read-more-less--less\"\r\n                        >\r\n                            {description}\r\n                        </ReactReadMoreReadLess>\r\n                    </div>\r\n                    <div className = {styles.getBook}>\r\n                        <h5>GET A BOOK</h5>\r\n                        <button onClick = {handlePage}>Google Books</button>\r\n                    </div>\r\n                    <div className = {styles.moreDetails}>\r\n                        <div>{pageCount} pages</div>\r\n                        <div>{`Published ${publishedDate} by ${publisher}`}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport {ShowBookCard}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\peoplePage\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\people\\people.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Footer\\Footer.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Trivia\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\search\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\genres\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Discussion\\action.js",["283","284","285"],"import * as ActionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nconst getReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST_REQ,\r\n  };\r\n};\r\nconst getSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getDataReq = () => {\r\n  return {\r\n    type: ActionTypes.GET_REQ,\r\n  };\r\n};\r\nconst getDataSuccess = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getDataFail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_FAIL,\r\n    payload,\r\n  };\r\n};\r\nexport const getPostDis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(getReq());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/posts\", {\r\n      bookname: payload.bookname,\r\n      topic: payload.topic,\r\n      comment: payload.comment,\r\n      addBook: payload.addBook,\r\n      author: payload.author,\r\n      id: 1,\r\n    })\r\n    .then((res) => {\r\n      dispatch(getDataReq());\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/posts/1\")\r\n        .then((res) => {\r\n          console.log(\"res\", res.data);\r\n          dispatch(getDataSuccess(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getDataFail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getFail(err));\r\n    });\r\n};\r\n// export const getDataPost = (payload) => (dispatch) => {\r\n\r\n//   return axios\r\n\r\n// };\r\n//for the particular comment to post\r\n\r\nconst postReq1 = () => {\r\n  return {\r\n    type: ActionTypes.POST1_REQ,\r\n  };\r\n};\r\nconst postSuccess1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst postFail1 = (payload) => {\r\n  return {\r\n    type: ActionTypes.POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Req = () => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_REQ,\r\n  };\r\n};\r\nconst getPost1Success = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_SUCSESS,\r\n    payload,\r\n  };\r\n};\r\nconst getPost1Fail = (payload) => {\r\n  return {\r\n    type: ActionTypes.GET_POST1_FAIL,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const Post1Dis = (payload) => (dispatch) => {\r\n  console.log(payload);\r\n  dispatch(postReq1());\r\n  axios\r\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/postcomments\", {\r\n      comment: payload.post,\r\n    })\r\n    .then((res) => {\r\n      axios\r\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/postcomments/4\")\r\n        .then((res) => {\r\n          dispatch(getPost1Success(res.data));\r\n        })\r\n        .catch((err) => {\r\n          dispatch(getPost1Fail(err));\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(postFail1(err));\r\n    });\r\n};\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Trivia\\TriviaQuestuion.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\shelfBookCard\\ShelfBookCard.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allOption\\main\\Main.jsx",["286","287","288","289","290"],"import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Navbar } from \"../../../components/Navbar/Navbar\";\r\nimport style from \"./main.module.css\";\r\nimport {num} from \"../../people/people\"\r\nimport {Footer} from \"../../../components/Footer/Footer\"\r\nimport {  useRouteMatch,Link, Route,useHistory } from \"react-router-dom\";\r\nconst init = [\r\n  {\r\n    group_name: \"Finction stars\",\r\n    genre: \"fiction\",\r\n  },\r\n  {\r\n    group_name: \"Action pack\",\r\n    genre: \"Action\",\r\n  },\r\n];\r\n\r\nexport const Main = () => {\r\n  const [group_name, setName] = React.useState(\"\");\r\n  const [genre, setGenre] = React.useState(\"\");\r\n  const [group, setgroup] = React.useState(init);\r\n    const history = useHistory()\r\n  const handleCreate = () => {\r\n    const payload = {\r\n      group_name: group_name,\r\n      genre: genre,\r\n    };\r\n    return setgroup([...group, payload]);\r\n  };\r\n\r\n  const handleExplore=(q,g)=>{\r\n     return history.push(`/group/${g}/${q}`)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        Join your groups\r\n      <div className={style.box}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setName(e.target.value)}\r\n          placeholder=\"group name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setGenre(e.target.value)}\r\n          placeholder=\"genre\"\r\n        />\r\n        <Button\r\n          onClick={handleCreate}\r\n          style={{ marginLeft: \"10px\" }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          create group\r\n        </Button>\r\n        {group?.map((item) => {\r\n          return (\r\n            <>\r\n              <div className={style.groupBox}>\r\n                  <div className={style.pBox}>\r\n                  <p style={{ color: \"#32362D\" }}>\r\n                  {item.group_name}<br />\r\n                  {item.genre} <br />\r\n                  {num()} members{\" \"}\r\n                </p>\r\n                  </div>\r\n                  <div className={style.btnBox}>\r\n                    <img src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/old-books-arranged-on-shelf-royalty-free-image-1572384534.jpg?crop=0.668xw:1.00xh;0,0&resize=480:*\" alt=\"alt\"/>\r\n                  </div>\r\n                <Button \r\n                onClick={()=>handleExplore(item.genre,item.group_name)}\r\n                  style={{\r\n                    marginLeft: \"50px\",\r\n                    height: \"50px\",\r\n                    marginTop: \"20px\",\r\n                    background: \"brown\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Explore the group\r\n                </Button>\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\allOption\\Group\\Group.jsx",["291","292"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GetGroupData } from \"../../../redux/allOptions/action\";\r\nimport style from \"./Group.module.css\";\r\nimport {v4 as uuid} from \"uuid\"\r\n\r\nconst init =[{\r\n    name:\"manish\",\r\n    topic:\"I love graphic novels. How do you find working as a writer in this format? What is the biggest challenge over a novel?\",\r\n    message:\" Writing graphic novels is much easier for me on every level. I visualize my novels as I write them and I love writing dialogue, both of which naturally lend themselves to the graphic novel format.\",\r\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\r\n    id:\"1\"\r\n},\r\n{\r\n    name:\"mandar\",\r\n    topic:\"What books are on your summer reading list this year?\",\r\n    message:\" suggest me some good books\",\r\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\r\n    id:\"2\"\r\n}]\r\n\r\n\r\nexport const Group = () => {\r\n  let { q, g } = useParams();\r\n  const[message,setMsg] = React.useState(\"\")\r\n  const[topic,setTopic] = React.useState(\"\")\r\n  const [chat,setChat] = React.useState(init)\r\n  const [num, setNum] = React.useState(4);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.group_reducer.group_data);\r\n  React.useEffect(() => {\r\n    dispatch(GetGroupData(q, num));\r\n  }, []);\r\n\r\n  const hanldeAddChat =(name)=>{\r\n        const payload={\r\n            name:name,\r\n            topic:topic,\r\n            message:message,\r\n            id:uuid()\r\n        }\r\n        setChat([...chat,payload])\r\n        setMsg(\"\")\r\n        setTopic(\"\")\r\n  }\r\n\r\n  \r\n  const [replay,setReplay] = React.useState(\"\")\r\n\r\n  const [replayMsg ,SetReplayMsg] = React.useState([])\r\n  const hanldeAddReplay =(id)=>{\r\n      const payload = [id,replay]\r\n      SetReplayMsg([...replayMsg,payload])\r\n    }\r\n    \r\n    console.log(replayMsg)\r\n  return (\r\n    <div>\r\n      <div className={style.box}>\r\n        <img src={data[0]?.volumeInfo.imageLinks.smallThumbnail} alt=\"alt\" />\r\n        <h1 className={style.groupName}>{g}</h1>\r\n        <br/>\r\n        <p>\r\n          When anyone on the TODAY team's looking for a book recommendation,\r\n          there's only one person to turn to: Jenna Bush Hager.<br/><br/> Jenna will\r\n          select a book and as you read along, we'll be posting updates right\r\n          here with thought-provoking conversation starters. We hope you'll\r\n          engage with the rest of the #ReadWithJenna community to make this book\r\n          club your own.\r\n        </p>\r\n        <br/>\r\n        <p style={{opacity:\"0.3\"}}>tags -- book-club, book-clubs, book-group, fiction, jenna-bush-hager, literature, today, and women-authors</p>\r\n        <br/>\r\n        <p style={{opacity:\"0.3\"}}>group type -- This is a public group. Anyone can join and invite others to join.</p>\r\n        <br />\r\n        <h2 style={{opacity:\"0.5\"}}>#Read with the group books</h2>\r\n        <div className={style.bookBox}>\r\n        {data?.map((item) => {\r\n            return (\r\n                <>\r\n              <div>\r\n                <img\r\n                  src={\r\n                      item.volumeInfo.imageLinks.smallThumbnail === undefined\r\n                      ? \"https://via.placeholder.com/150\"\r\n                      : item.volumeInfo.imageLinks.smallThumbnail\r\n                    }\r\n                    alt=\"\"\r\n                    />\r\n              </div>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n        <button>Join Group</button>\r\n      </div>     \r\n      <div className={style.box1}>\r\n          <p style={{borderBottom:\"1px solid grey\"}}>Announcement</p>\r\n          <div className={style.aBox}>\r\n            <p>Book Club Q&A with Author</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our December book pick is The Bluest Eye by Toni Morrison</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our January 2021 book pick is Black Buck by Mateo Askaripour</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Our July book club pick is Evvie Drake Starts Over</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n          <div className={style.aBox}>\r\n            <p>Share your thoughts about Black Buck</p>\r\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\r\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\r\n          </div>\r\n      </div>\r\n      <h1 style={{ textAlign: \"center\" }}>Group Discussion</h1>\r\n      <div className={style.chatContainer}>\r\n      {\r\n          chat.map(item=>{\r\n            return <>\r\n          \r\n              <div key={item.id} className={style.chat}>\r\n            <h2>{item.topic}</h2>\r\n        <p className={style.message}><h style={{opacity:\"0.5\",color:\"#4e5545\"}}>{item.name}</h> <h style={{marginLeft:\"25px\"}}>{item.message}</h></p>\r\n            <div className={style.replaySection}>\r\n                {\r\n                    replayMsg.map(i=> item.id ===i[0]? \r\n                         <p style={{marginTop:\"30px\"}}> {i[1]} <h style={{opacity:\"0.5\",color:\"#4e5545\",marginLeft:\"20px\",fontSize:\"10px\"}}>replay by {item.name}</h></p>\r\n                    :null)\r\n                    }\r\n            </div>\r\n            <input className={style.replayInput} onChange={(e)=>setReplay(e.target.value)} type=\"text\"  />\r\n            <button onClick={()=>hanldeAddReplay(item.id)} style={{marginLeft:\"10px\", marginBottom: \"10px\",marginTop:\"20px\",}} className={style.replay}>comment</button>\r\n        </div>\r\n            </>})\r\n      }\r\n      </div>\r\n      <div className={style.chatInputBox}>\r\n        <input className={style.sendInput}  value={topic} onChange={(e)=>setTopic(e.target.value)} type=\"text\" placeholder=\"topic\" />\r\n        <input className={style.sendInput}  value={message} onChange={(e)=>setMsg(e.target.value)} type=\"text\" placeholder=\"discussion\" />\r\n        <button onClick={()=>hanldeAddChat(\"saravana\")} className={style.send} >Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\allOption_reducers.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\actionType.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\allOptions\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\searchBar\\Search.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\searchResultCard\\SearchResultCard.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Landing_page\\LandingPage.jsx",["293"],"import React from \"react\";\r\nimport style from \"./landing.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Footer } from \"../../components/Footer/Footer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { name,sendAuthLogin,sendAuthRegister } from \"../../redux/landingPage/action\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  btn: {\r\n    color: \"white\",\r\n    background: \"#333333\",\r\n    marginTop: \"5px\",\r\n    marginLeft: \"10px\",\r\n    \"&:hover\": {\r\n      background: \"#424242\",\r\n    },\r\n  },\r\n  btn2: {\r\n    color: \"white\",\r\n    background: \"#FFD767\",\r\n    marginTop: \"55px\",\r\n    marginLeft: \"10px\",\r\n    \"&:hover\": {\r\n      background: \"#ffde82\",\r\n    },\r\n  },\r\n}));\r\nexport const LandingPage = () => {\r\n  const classes = useStyles();\r\n  const [email,setEmail] = React.useState()\r\n  const [email2,setEmail2] = React.useState()\r\n  const [username,setUsername] = React.useState()\r\n  const [password,setPassword] = React.useState()\r\n  const [password2,setPassword2] = React.useState()\r\n  const signin = useSelector(state=>state.signin.login)\r\n  const dispatch = useDispatch()\r\n  const handleRegister =()=>{\r\n      let payload ={\r\n        email:email,\r\n        password:password\r\n      }\r\n      dispatch(name(username))\r\n      dispatch(sendAuthRegister(payload))\r\n      setEmail(\"\")\r\n      setPassword(\"\")\r\n      setUsername(\"\")\r\n  }\r\n  const handleLogin =()=>{\r\n    let payload ={\r\n      email:email2,\r\n      password:password2\r\n    }\r\n    dispatch(sendAuthLogin(payload))\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n}\r\nconsole.log(signin)\r\n  return (\r\n    <>\r\n      <div className={style.navBar}>\r\n        <img\r\n          className={style.logo}\r\n          src=\"https://s.gr-assets.com/assets/home/header_logo-8d96d7078a3d63f9f31d92282fd67cf4.png\"\r\n          alt=\"logo\"\r\n        />\r\n        <div className={style.loginContainer}>\r\n          <input onChange={(e)=>setEmail2(e.target.value)}  type=\"email\" placeholder=\"email\" />\r\n          <input onChange={(e)=>setPassword2(e.target.value)}   type=\"password\" placeholder=\"password\" />\r\n          <Button onClick={handleLogin}  className={classes.btn} variant=\"contained\" color=\"primary\">\r\n            sign in\r\n          </Button>\r\n          <p>Forget it ?</p>\r\n        </div>\r\n      </div>\r\n      <div className={style.banner}>\r\n        <div className={style.bannerImg}>\r\n          <p>Announcing the</p>\r\n          <h1>\r\n            Best Book\r\n            <br />\r\n            of 2021\r\n          </h1>\r\n          <p id={style.bannerImg_p}>\r\n            See the winners in our community of readers\r\n          </p>\r\n        </div>\r\n        <div className={style.signUpContainer}>\r\n          <p>New here? Create a free account!</p>\r\n          <input onChange={(e)=>setUsername(e.target.value)} value={username} type=\"name\" placeholder=\"username\" />\r\n          <br />\r\n          <input onChange={(e)=>setEmail(e.target.value)}  type=\"email\" placeholder=\"email\" />\r\n          <br />\r\n          <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"password\" />\r\n          <br />\r\n          <Button onClick={handleRegister} className={classes.btn} variant=\"contained\" color=\"primary\">\r\n            sign up\r\n          </Button>\r\n          <p>\r\n            By clicking “Sign up” I agree to the Goodreads Terms of Service and\r\n            confirm that I am at least 13 years old.\r\n          </p>\r\n        </div>\r\n        {/* <img className={style.bookpng} src=\"https://freepngimg.com/thumb/categories/2299.png\" alt=\"alt\"/> */}\r\n      </div>\r\n      <div className={style.banner2}>\r\n        <div className={style.banner2_container1}>\r\n          <h2 id={style.banner2_container1_h2}>\r\n            12th Annual Goodreads Choice Awards\r\n          </h2>\r\n          <p>\r\n            See the winners in the only major book awards decided by readers.\r\n          </p>\r\n          <div className={style.list}>\r\n            <li>Best Fiction</li>\r\n            <li>Best Romance</li>\r\n            <li>Best Action</li>\r\n            <li>Best Non-Fiction</li>\r\n          </div>\r\n          <div className={style.list}>\r\n            <li>Best Humor</li>\r\n            <li>Best Fantasy</li>\r\n            <li>Best Love</li>\r\n            <li>Best Drama</li>\r\n          </div>\r\n          <div className={style.list}>\r\n            <li>Best Mentor-Books</li>\r\n            <li>Best Historical-Fiction</li>\r\n            <li>Best Action</li>\r\n            <li>Best Young adult</li>\r\n          </div>\r\n          <Button className={classes.btn2} variant=\"contained\" color=\"primary\">\r\n            see for the winners\r\n          </Button>\r\n        </div>\r\n        <div className={style.books }>\r\n            <p style={{fontSize: \"18px\"}}>News & Interviews</p>\r\n            <br/>\r\n            <p>7 greater books hitting shelves This Week</p>\r\n            <div className={style.bookshelves}>\r\n                <img src=\"https://images.gr-assets.com/blogs/1611614949p7/1998.jpg\" alt=\"img\"/>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <p style={{fontSize: \"13px\",opacity:\"0.5\"}}>15 likes - <span>11 comments</span></p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\landingPage\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\readButton\\ReadButton.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\postReducer.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\Home\\Home.jsx",["294","295"],"import React from 'react'\r\nimport { Post } from '../../components/Post/Post'\r\nimport styles from \"./Home.module.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { updatePosts } from '../../redux/Post/action';\r\nimport { getPosts } from '../../redux/Post/action'\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const posts = useSelector(state => state.posts.posts);\r\n\r\n    const currUserProfile = \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.3OcSxB5CZPfkP5NB8z1CDQHaHa%26pid%3DApi&f=1\"\r\n    const currentUser =\"Mandar Satam\";\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(()=> {\r\n        dispatch(getPosts());\r\n    }, [dispatch])\r\n\r\n    const handleComment = (id, commentObj) => {\r\n        dispatch(updatePosts(id, commentObj))\r\n    }\r\n\r\n    console.log(posts);\r\n\r\n    return (\r\n        <div className={styles.home__cont}>\r\n            <div className={styles.home__left}>\r\n                <h3>Currently Reading</h3>\r\n            </div>\r\n            <div className={styles.home__mid}>\r\n                <h3>Updates</h3>\r\n                {\r\n                    posts[0]?.map(item => \r\n                        <Post {...item} key={item.id} handleComment={handleComment}/>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className={styles.home__right}>\r\n                <h3>News and Interviews</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Home}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Navbar\\Navbar.jsx",["296"],"import React from 'react'\r\nimport styles from \"./Navbar.module.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Search } from '../searchBar/Search'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={styles.navbar__cont}>\r\n            <div className={styles.navbar__left}>\r\n                <div className={styles.menu__logo}>\r\n                    <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F1a%2FGoodreads_logo.svg%2F800px-Goodreads_logo.svg.png&f=1&nofb=1\"/>\r\n                </div>\r\n                <div className={styles.menu}><Link to=\"/\" className={styles.menu__link}>Home</Link></div> \r\n                <div className={styles.menu}><Link to=\"/mybooks\" className={styles.menu__link}>My Books</Link></div> \r\n                <div className={styles.menu}>\r\n                    <Link to=\"#\" className={styles.menu__link}>Browse <i class=\"fas fa-caret-down\"></i></Link>\r\n                    <div className={styles.dropdown_content}>\r\n                        <Link to=\"/genres\" className={styles.dropdown_link}>All Genre</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Mystery</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Thriller</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Comic</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Children's</Link>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.menu}>\r\n                    <Link to=\"#\" className={styles.menu__link}>Community <i class=\"fas fa-caret-down\"></i></Link>\r\n                    <div className={styles.dropdown_content}>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Discussions</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>People</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Trivia</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Quotes</Link><br/>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            <div>\r\n                <Search></Search>\r\n            </div>\r\n            <div>\r\n                <div className={styles.menu__icon}>\r\n                    <Link to=\"#\"><i class=\"fas fa-bell\"></i></Link>\r\n                </div>\r\n                <div className={styles.menu__icon}>\r\n                    <Link to=\"#\"><i class=\"fas fa-comments\"></i></Link>\r\n\r\n                </div>\r\n                <div className={styles.menu__icon}>\r\n                    <Link to=\"#\"><i class=\"fas fa-envelope\"></i></Link>\r\n                    \r\n                </div>\r\n                <div className={styles.menu__icon}>\r\n                    <Link to=\"#\"><i class=\"fas fa-users\"></i></Link>\r\n                    \r\n                </div>\r\n                <div className={styles.menu__icon}>\r\n                    <Link to=\"#\"><i class=\"fas fa-user\"></i></Link>\r\n                    <div className={styles.dropdown_content}>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Name</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Profile</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Friends</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Discussions</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Favourites</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Quotes</Link><br/>\r\n                        <Link to=\"#\" className={styles.dropdown_link}>Sign Out</Link><br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Navbar}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\MyBooks\\MyBooks.jsx",["297","298","299"],"import React from 'react'\r\nimport {MyBooksCard} from \"../../components/MyBooksCard/MyBooksCard\"\r\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\"\r\nimport { getBooks } from '../../redux/myBooks/action'\r\nimport styles from \"./MyBooks.module.css\"\r\n\r\nconst MyBooks = () => {\r\n\r\n    const {books, wantToRead, currentlyReading, read} = useSelector(state => state.myBooks, shallowEqual)\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const [sortOpt, setSortOpt] = React.useState(\"title\")\r\n    const [checked, setChecked] = React.useState(\"asc\")\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(()=> {\r\n        dispatch(getBooks());\r\n    }, [dispatch])\r\n\r\n\r\n    const handleChange = (value) => {\r\n        console.log(value);\r\n        if(value ===\"all\"){\r\n            setData(books[0])\r\n        }else if(value === \"read\"){\r\n            const tempData = books[0].filter(item => {\r\n                for(let i in read[0][0]){\r\n                    console.log(read[0][0][i]);\r\n                    if(read[0][0][i].id === item.id){\r\n                        return item;\r\n                    }\r\n                }\r\n            })\r\n            setData(tempData);\r\n        }else if(value === \"currently_reading\"){\r\n            const tempData = books[0].filter(item => {\r\n                for(let i in currentlyReading[0][0]){\r\n                    console.log(currentlyReading[0][0][i]);\r\n                    if(currentlyReading[0][0][i].id === item.id){\r\n                        return item;\r\n                    }\r\n                }\r\n            })\r\n            setData(tempData);\r\n        }\r\n        else if(value === \"want_to_read\"){\r\n            const tempData = books[0].filter(item => {\r\n                for(let i in wantToRead[0][0]){\r\n                    console.log(wantToRead[0][0][i]);\r\n                    if(wantToRead[0][0][i].id === item.id){\r\n                        return item;\r\n                    }\r\n                }\r\n            })\r\n            setData(tempData);\r\n        }\r\n    }\r\n\r\n    const handleSort = (value) => {\r\n        setSortOpt(value)\r\n        console.log(checked);\r\n        let tempData1 = data.sort((a, b) => {\r\n            const title1= a.volumeInfo[value];\r\n            const title2 = b.volumeInfo[value];\r\n            if(checked === \"asc\"){\r\n                if (title1 < title2) {\r\n                    return -1;\r\n                }\r\n                if (title1 > title2) {\r\n                    return 1;\r\n                }\r\n                return 0;   \r\n            }\r\n            else{\r\n                if (title1 < title2) {\r\n                    return 1;\r\n                }\r\n                if (title1 > title2) {\r\n                    return -1;\r\n                }\r\n                return 0; \r\n            }\r\n        })\r\n        setData(tempData1)\r\n    }\r\n\r\n    const handleSortDetail = (value) => {\r\n        console.log(value);\r\n        setChecked(value);\r\n        handleSort(sortOpt)\r\n    }\r\n    \r\n\r\n    // const handleCheck = (value) => {\r\n    //     if(checked === value){\r\n    //         return true;\r\n    //     }else{\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.cont}>\r\n            <h2>My Books</h2>\r\n            <hr className={styles.horizontal_rule}/>\r\n            <div className={styles.cont__flex}>\r\n                <div className={styles.cont__filter}>\r\n                    <p><b>Bookshelf</b></p>\r\n                        <button value=\"all\" className={styles.filter_btn} onClick={e => handleChange(e.target.value)}>All</button><br/>\r\n                        <button value=\"read\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Read</button><br/>\r\n                        <button value=\"currently_reading\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Currently Reading</button><br/>\r\n                        <button value=\"want_to_read\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Want to Read</button><br/>\r\n                        <hr className={styles.horizontal_rule}/>\r\n                        {/* <p value=\"all\" name=\"bookshelf\" onClick={handleChange}>All</p>\r\n                        <p>Read</p>\r\n                        <p>Currently Reading</p>\r\n                        <p>Want to Read</p> */}\r\n                        {/* <input type=\"radio\" id=\"all\" name=\"bookShelf\" value=\"all\" onClick={e => handleChange(e.target.value)}  checked={}/>\r\n                        <label for=\"male\">All</label><br/>\r\n                        <input type=\"radio\" id=\"read\" name=\"bookShelf\" value=\"read\" onClick={e => handleChange(e.target.value)} checked={e => e.target.value === checked? true : false}/>\r\n                        <label for=\"female\">Read</label><br/>\r\n                        <input type=\"radio\" id=\"currently_reading\" name=\"bookShelf\" value=\"currently_reading\" onClick={e => handleChange(e.target.value)} checked={e => {return e.target.value === checked? true : false}}/>\r\n                        <label for=\"other\">Currently Reading</label><br/>\r\n                        <input type=\"radio\" id=\"want_to_read\" name=\"bookShelf\" value=\"want_to_read\"/>\r\n                        <label for=\"other\">Want to Read</label>   */}\r\n                </div>\r\n                <div className={styles.cont__main}>\r\n                    {\r\n                        data.length !== 0 ? data.map(item =>\r\n                            <MyBooksCard {...item} key={item.id}/>   \r\n                        ): books.length !== 0 ? books[0].map(item =>  <MyBooksCard {...item} key={item.id}/> ): <div></div>\r\n                    }  \r\n                    <div className={styles.cont__sort}>\r\n                        <select name=\"sort\" value={sortOpt} onChange={e => handleSort(e.target.value)}>\r\n                            <option value=\"title\">Title</option>\r\n                            <option value=\"averageRating\">Rating</option>\r\n                            <option value=\"publishedDate\">Publised Date</option>\r\n                        </select>\r\n                        <div>\r\n                            <input type=\"radio\" id=\"asc\" name=\"sort\" value=\"asc\" checked={checked===\"asc\" ? true: false} onClick={e => handleSortDetail(e.target.value)}/>\r\n                            <label for=\"asc\">Asc</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" id=\"asc\" name=\"sort\" value=\"dsc\" checked={checked===\"dsc\" ? true: false} onClick={e => handleSortDetail(e.target.value)}/>\r\n                            <label for=\"asc\">Dsc</label>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {MyBooks}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\actionType.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\Post\\action.js",["300","301"],"import { GET_POSTS_FAILURE, GET_POSTS_REQUEST, GET_POSTS_SUCCESS } from \"./actionType\"\r\nimport { UPDATE_POSTS_FAILURE, UPDATE_POSTS_REQUEST, UPDATE_POSTS_SUCCESS } from \"./actionType\"\r\nimport axios from \"axios\"\r\n\r\nconst getPostsRequest = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPostsSuccess = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPostsFailure = (payload) =>{\r\n    return{\r\n        type: GET_POSTS_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\nconst getPosts = (payload) => (dispatch) =>{\r\n    dispatch(getPostsRequest);\r\n    return axios\r\n    .get(\"https://good-reads-users-mock.herokuapp.com/community_updates\")\r\n    .then(res => dispatch(getPostsSuccess(res.data)))\r\n    .catch(err => {\r\n        dispatch(getPostsFailure(err))\r\n    })\r\n}\r\n\r\n\r\n\r\nconst updatePostsRequest = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_REQUEST,\r\n        payload\r\n    }\r\n}\r\n\r\nconst updatePostsSuccess = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nconst updatePostsFailure = (payload) =>{\r\n    return{\r\n        type: UPDATE_POSTS_FAILURE,\r\n        payload\r\n    }\r\n}\r\n\r\nconst updatePosts = (id, commentObj) => (dispatch) =>{\r\n    let tempData =[];\r\n    dispatch(updatePostsRequest);\r\n    axios.get(`http://localhost:3000/community/${id}`)\r\n    // .then(res => tempData = res.data.comments)\r\n    .then(res => tempData = res.data.comments)\r\n    .then(tempData.push(commentObj))\r\n    .then(console.log(tempData))\r\n    dispatch(updatePostsRequest())\r\n    axios.patch(`http://localhost:3000/community/${id}`,{\r\n        comments : tempData\r\n    })\r\n    .then(dispatch(getPosts()))\r\n    .catch(err => console.log(err))\r\n    // .then(res => dispatch(updatePostsSuccess(res.data)))\r\n    // .then(res => dispatch(updatePostsSuccess(res.data)))\r\n    // .catch(err => {\r\n    //     dispatch(updatePostsFailure(err))\r\n    // })\r\n}\r\n\r\nexport {updatePosts, getPosts}","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\redux\\myBooks\\action.js",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\Post\\Post.jsx",["302","303","304","305","306","307","308","309"],"import React from 'react'\r\nimport styles from \"./Post.module.css\"\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {Link} from \"react-router-dom\"\r\nimport {useDispatch} from \"react-redux\"\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const {type_of_post, name, image_url, rating, review, likes, comments, id, handleComment} = props;\r\n\r\n    const {comment, user, commenterImg} = comments;\r\n\r\n    const {authors, title, description} = props.book_data.volumeInfo;\r\n\r\n    const commentObj = {\r\n        id: 99,\r\n        user: \"John Doe\",\r\n        comment: \"Added comment\",\r\n        commenterImg: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.q85HUE21WMuwJaks82FqdAHaHW%26pid%3DApi&f=1\"\r\n    }\r\n\r\n    let thumbnail;\r\n    \"imageLinks\" in props.book_data.volumeInfo ?  thumbnail = props.book_data.volumeInfo.imageLinks.thumbnail : thumbnail = \"https://via.placeholder.com/140x200\"\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.post_profile}>\r\n                <img src={image_url}/>\r\n            </div>\r\n            <div className={styles.post__cont}>\r\n                <div className={styles.post__top}>\r\n                    <p className={styles.name_action}><b>{name}</b>{\r\n                        type_of_post === \"read\"? \" has read \": type_of_post === \"reading\" ? \" is reading\" : type_of_post === \"wantToRead\" ? \" wants to read\" : type_of_post === \"rating\" ? \" has rated\" : type_of_post === \"review\" ? \" has reviewed\" : \"\"\r\n                    }</p>\r\n                    {\r\n                        rating !== \"\" && \r\n                        <>\r\n                        <p>Rating:</p>\r\n                        <Rating name=\"read-only\" value={rating} readOnly />\r\n                        </>\r\n                    }\r\n                    {\r\n                        review !== \"\" && \r\n                        <p>{review}</p>\r\n                    }\r\n                    {/* <p className={styles.time_stamp}>Just Now</p> */}\r\n                </div>\r\n                <div className={styles.post__main}>\r\n                    <div>\r\n                        <img src={thumbnail}/>\r\n                    </div>\r\n                    <div className={styles.main__content}>\r\n                        <h3>{title}</h3>\r\n                        <p>by {authors[0]}</p>\r\n                        <button>Want to Read</button>\r\n                        <p>{description}</p>\r\n                        {/* <Link to=\"#\">... Continue reading</Link> */}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.like_comment}>\r\n                    <button>{likes !== 0 ? likes : 0} - Likes</button><span> . </span>\r\n                    <button>{comments.length !== 0 ? comments.length : 0} - Comments</button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.post__bottom}>\r\n                <div style={{borderBottom : \"1px solid #D8D8D8\"}}>\r\n                    {\r\n                        comments?.map(item => \r\n                            <>\r\n                            <div className={styles.comment_user}>\r\n                                <div className={styles.comment_user_profile}>\r\n                                    <img src={item.commenterImg}/>\r\n                                </div>\r\n                                <div className={styles.comment_comment}>\r\n                                    <p><b>{item.user}</b></p>\r\n                                    <p>{item.comment}</p>\r\n                                </div>                           \r\n                            </div>\r\n                            </>\r\n                            )\r\n                    }\r\n                \r\n                </div>\r\n                <div>\r\n                    <i class=\"fas fa-user\"></i>\r\n                    <input type=\"text\" placeholder=\"Write a comment...\"/>\r\n                </div>\r\n                <button onClick={() =>  handleComment(id, commentObj)}>Comment</button>\r\n            </div>\r\n        </div>\r\n        // <div className={styles.post}>\r\n        //     <div className={styles.post_profile}>\r\n        //         <i class=\"fas fa-user\"></i>\r\n        //     </div>\r\n        //     <div className={styles.post__cont}>\r\n        //         <div className={styles.post__top}>\r\n        //             <p className={styles.name_action}><b>Mandar Satam</b> has reviewed</p>\r\n        //             <p>Rating:</p>\r\n        //             <Rating name=\"read-only\" value=\"3\" readOnly />\r\n        //             <p>Whatever the review is. Lorem ipsum golem lavda lasun</p>\r\n        //             {/* <p className={styles.time_stamp}>Just Now</p> */}\r\n        //         </div>\r\n        //         <div className={styles.post__main}>\r\n        //             <div>\r\n        //                 <img src=\"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1360206420i/11870085._SY180_.jpg\"/>\r\n        //             </div>\r\n        //             <div className={styles.main__content}>\r\n        //                 <h3>The Fault in Our Stars</h3>\r\n        //                 <p>by John Green</p>\r\n        //                 <button>Want to Read</button>\r\n        //                 <p>Despite the tumor-shrinking medical miracle that has bought her a few years, Hazel has never been anything but terminal, her final chapter inscribed upon diagnosis. But when a…Continue reading</p>\r\n        //             </div>\r\n        //         </div>\r\n        //         <div className={styles.like_comment}>\r\n        //             <button>Like</button><span> . </span>\r\n        //             <button>Comment</button>\r\n        //         </div>\r\n        //     </div>\r\n        //     <div className={styles.post__bottom}>\r\n        //         <i class=\"fas fa-user\"></i>\r\n        //         <input type=\"text\" placeholder=\"Write a comment...\"/>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport {Post}\r\n","D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\components\\MyBooksCard\\MyBooksCard.jsx",[],"D:\\project\\unit-3 project\\Goodreads---Charlie\\good_reads\\src\\pages\\messaging\\chat\\Chat.jsx",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":14},{"ruleId":"314","severity":1,"message":"318","line":2,"column":25,"nodeType":"316","messageId":"317","endLine":2,"endColumn":34},{"ruleId":"314","severity":1,"message":"319","line":18,"column":10,"nodeType":"316","messageId":"317","endLine":18,"endColumn":21},{"ruleId":"314","severity":1,"message":"320","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":16},{"ruleId":"321","severity":1,"message":"322","line":16,"column":8,"nodeType":"323","endLine":16,"endColumn":10,"suggestions":"324"},{"ruleId":"321","severity":1,"message":"322","line":16,"column":8,"nodeType":"323","endLine":16,"endColumn":10,"suggestions":"325"},{"ruleId":"321","severity":1,"message":"326","line":15,"column":8,"nodeType":"323","endLine":15,"endColumn":10,"suggestions":"327"},{"ruleId":"314","severity":1,"message":"328","line":3,"column":16,"nodeType":"316","messageId":"317","endLine":3,"endColumn":24},{"ruleId":"314","severity":1,"message":"329","line":5,"column":22,"nodeType":"316","messageId":"317","endLine":5,"endColumn":33},{"ruleId":"330","severity":1,"message":"331","line":90,"column":11,"nodeType":"332","endLine":90,"endColumn":25},{"ruleId":"310","replacedBy":"333"},{"ruleId":"312","replacedBy":"334"},{"ruleId":"314","severity":1,"message":"329","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":14},{"ruleId":"314","severity":1,"message":"335","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":15},{"ruleId":"314","severity":1,"message":"336","line":13,"column":9,"nodeType":"316","messageId":"317","endLine":13,"endColumn":19},{"ruleId":"321","severity":1,"message":"337","line":15,"column":6,"nodeType":"323","endLine":15,"endColumn":8,"suggestions":"338"},{"ruleId":"321","severity":1,"message":"339","line":18,"column":6,"nodeType":"323","endLine":18,"endColumn":20,"suggestions":"340"},{"ruleId":"321","severity":1,"message":"337","line":18,"column":8,"nodeType":"323","endLine":18,"endColumn":16,"suggestions":"341"},{"ruleId":"314","severity":1,"message":"342","line":8,"column":7,"nodeType":"316","messageId":"317","endLine":8,"endColumn":17},{"ruleId":"314","severity":1,"message":"343","line":77,"column":7,"nodeType":"316","messageId":"317","endLine":77,"endColumn":19},{"ruleId":"314","severity":1,"message":"344","line":89,"column":7,"nodeType":"316","messageId":"317","endLine":89,"endColumn":18},{"ruleId":"314","severity":1,"message":"345","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":16},{"ruleId":"314","severity":1,"message":"320","line":6,"column":9,"nodeType":"316","messageId":"317","endLine":6,"endColumn":15},{"ruleId":"314","severity":1,"message":"346","line":7,"column":11,"nodeType":"316","messageId":"317","endLine":7,"endColumn":24},{"ruleId":"314","severity":1,"message":"347","line":7,"column":25,"nodeType":"316","messageId":"317","endLine":7,"endColumn":29},{"ruleId":"314","severity":1,"message":"348","line":7,"column":31,"nodeType":"316","messageId":"317","endLine":7,"endColumn":36},{"ruleId":"314","severity":1,"message":"349","line":29,"column":15,"nodeType":"316","messageId":"317","endLine":29,"endColumn":21},{"ruleId":"321","severity":1,"message":"350","line":34,"column":6,"nodeType":"323","endLine":34,"endColumn":8,"suggestions":"351"},{"ruleId":"314","severity":1,"message":"320","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":16},{"ruleId":"314","severity":1,"message":"352","line":15,"column":11,"nodeType":"316","messageId":"317","endLine":15,"endColumn":26},{"ruleId":"314","severity":1,"message":"353","line":16,"column":11,"nodeType":"316","messageId":"317","endLine":16,"endColumn":22},{"ruleId":"354","severity":1,"message":"355","line":12,"column":21,"nodeType":"356","endLine":12,"endColumn":216},{"ruleId":"357","severity":1,"message":"358","line":28,"column":51,"nodeType":"359","messageId":"360","endLine":28,"endColumn":53},{"ruleId":"357","severity":1,"message":"358","line":38,"column":51,"nodeType":"359","messageId":"360","endLine":38,"endColumn":53},{"ruleId":"357","severity":1,"message":"358","line":49,"column":51,"nodeType":"359","messageId":"360","endLine":49,"endColumn":53},{"ruleId":"314","severity":1,"message":"361","line":45,"column":7,"nodeType":"316","messageId":"317","endLine":45,"endColumn":25},{"ruleId":"314","severity":1,"message":"362","line":52,"column":7,"nodeType":"316","messageId":"317","endLine":52,"endColumn":25},{"ruleId":"314","severity":1,"message":"347","line":4,"column":9,"nodeType":"316","messageId":"317","endLine":4,"endColumn":13},{"ruleId":"314","severity":1,"message":"363","line":5,"column":9,"nodeType":"316","messageId":"317","endLine":5,"endColumn":20},{"ruleId":"314","severity":1,"message":"364","line":12,"column":12,"nodeType":"316","messageId":"317","endLine":12,"endColumn":19},{"ruleId":"314","severity":1,"message":"365","line":12,"column":21,"nodeType":"316","messageId":"317","endLine":12,"endColumn":25},{"ruleId":"314","severity":1,"message":"366","line":12,"column":27,"nodeType":"316","messageId":"317","endLine":12,"endColumn":39},{"ruleId":"354","severity":1,"message":"355","line":31,"column":17,"nodeType":"356","endLine":31,"endColumn":39},{"ruleId":"354","severity":1,"message":"355","line":53,"column":25,"nodeType":"356","endLine":53,"endColumn":47},{"ruleId":"354","severity":1,"message":"355","line":75,"column":37,"nodeType":"356","endLine":75,"endColumn":67},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'LandingPage' is defined but never used.","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'endpoint'. Either include them or remove the dependency array.","ArrayExpression",["369"],["370"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'type'. Either include them or remove the dependency array.",["371"],"'Redirect' is defined but never used.","'getDataPost' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["367"],["368"],"'getDataPost1' is defined but never used.","'isLoading2' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["372"],"React Hook React.useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["373"],["374"],"'getSuccess' is assigned a value but never used.","'postSuccess1' is assigned a value but never used.","'getPost1Req' is assigned a value but never used.","'Navbar' is defined but never used.","'useRouteMatch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'setNum' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'num', and 'q'. Either include them or remove the dependency array.",["375"],"'currUserProfile' is assigned a value but never used.","'currentUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'updatePostsSuccess' is assigned a value but never used.","'updatePostsFailure' is assigned a value but never used.","'useDispatch' is defined but never used.","'comment' is assigned a value but never used.","'user' is assigned a value but never used.","'commenterImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},"Update the dependencies array to be: [dispatch, endpoint]",{"range":"389","text":"390"},{"range":"391","text":"390"},"Update the dependencies array to be: [dispatch, type]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch]",{"range":"394","text":"395"},"Update the dependencies array to be: [currentIndex, getImages]",{"range":"396","text":"397"},"Update the dependencies array to be: [bookId, dispatch]",{"range":"398","text":"399"},"Update the dependencies array to be: [dispatch, num, q]",{"range":"400","text":"401"},[615,617],"[dispatch, endpoint]",[638,640],[568,570],"[dispatch, type]",[629,631],"[dispatch]",[685,699],"[currentIndex, getImages]",[734,742],"[bookId, dispatch]",[1354,1356],"[dispatch, num, q]"]