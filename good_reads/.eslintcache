[{"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/index.js":"1","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/App.js":"2","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/store.js":"3","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/reportWebVitals.js":"4","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/action.js":"5","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/reducer.js":"6","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/redux.js":"7","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/reducer.js":"8","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/reducer.js":"9","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/landingPage_reducers.js":"10","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/peoplePage_reducers.js":"11","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/reducer.js":"12","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/redux.js":"13","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/postReducer.js":"14","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/allOption_reducers.js":"15","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/reducer.js":"16","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/routes/Routes.jsx":"17","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allOption/main/Main.jsx":"18","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/people/People.jsx":"19","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/actionType.js":"20","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/actionTypes.js":"21","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/actionTypes.js":"22","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/actionTypes.js":"23","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/actionType.js":"24","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/actionType.js":"25","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/actionType.js":"26","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/actionType.js":"27","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/actionType.js":"28","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/actionTypes.js":"29","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionType.js":"30","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/people/people.js":"31","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allSpecificGenre/AllSpecificGenre.jsx":"32","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allSearch/AllSearch.jsx":"33","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/DiscussionArea.jsx":"34","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Home/Home.jsx":"35","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/DiscussionPost.jsx":"36","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/PeopleShow/PeopleShow.jsx":"37","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/specificGenre/SpecificGenre.jsx":"38","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Trivia/Trivia.jsx":"39","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Landing_page/LandingPage.jsx":"40","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allOption/Group/Group.jsx":"41","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/Discussion.jsx":"42","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/MyBooks/MyBooks.jsx":"43","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/genres/Genres.jsx":"44","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/showBookCard/ShowBookCard.jsx":"45","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Navbar/Navbar.jsx":"46","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Footer/Footer.jsx":"47","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/messaging/chat/Chat.jsx":"48","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/action.js":"49","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/action.js":"50","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/action.js":"51","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/action.js":"52","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/action.js":"53","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/action.js":"54","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/action.js":"55","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/action.js":"56","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/action.js":"57","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Trivia/TriviaQuestuion.jsx":"58","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Post/Post.jsx":"59","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/shelfBookCard/ShelfBookCard.jsx":"60","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/searchBar/Search.jsx":"61","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/readButton/ReadButton.jsx":"62","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/MyBooksCard/MyBooksCard.jsx":"63","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/searchResultCard/SearchResultCard.jsx":"64","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/Quotes.jsx":"65","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/action.js":"66","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/reduceradd.js":"67","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionTypeadd.js":"68","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionadd.js":"69","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/MyQuotes.jsx":"70","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/AddQuotes.jsx":"71","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/CurrentlyReading/CurrentlyReading.jsx":"72","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/WantToRead/WantToRead.jsx":"73"},{"size":717,"mtime":1612372327698,"results":"74","hashOfConfig":"75"},{"size":452,"mtime":1612506676912,"results":"76","hashOfConfig":"75"},{"size":1465,"mtime":1612550782051,"results":"77","hashOfConfig":"75"},{"size":362,"mtime":1612257704760,"results":"78","hashOfConfig":"75"},{"size":1807,"mtime":1612523364769,"results":"79","hashOfConfig":"75"},{"size":854,"mtime":1612506677026,"results":"80","hashOfConfig":"75"},{"size":1639,"mtime":1612506677022,"results":"81","hashOfConfig":"75"},{"size":1490,"mtime":1612364611071,"results":"82","hashOfConfig":"75"},{"size":1473,"mtime":1612364611072,"results":"83","hashOfConfig":"75"},{"size":513,"mtime":1612372327703,"results":"84","hashOfConfig":"75"},{"size":327,"mtime":1612372327705,"results":"85","hashOfConfig":"75"},{"size":1374,"mtime":1612372327704,"results":"86","hashOfConfig":"75"},{"size":620,"mtime":1612340989485,"results":"87","hashOfConfig":"75"},{"size":1689,"mtime":1612506677023,"results":"88","hashOfConfig":"75"},{"size":336,"mtime":1612506677024,"results":"89","hashOfConfig":"75"},{"size":709,"mtime":1612551695163,"results":"90","hashOfConfig":"75"},{"size":3904,"mtime":1612521579899,"results":"91","hashOfConfig":"75"},{"size":2675,"mtime":1612506676922,"results":"92","hashOfConfig":"75"},{"size":2457,"mtime":1612523364767,"results":"93","hashOfConfig":"75"},{"size":294,"mtime":1612506677025,"results":"94","hashOfConfig":"75"},{"size":529,"mtime":1612506677009,"results":"95","hashOfConfig":"75"},{"size":222,"mtime":1612364611070,"results":"96","hashOfConfig":"75"},{"size":220,"mtime":1612364611072,"results":"97","hashOfConfig":"75"},{"size":98,"mtime":1612372327703,"results":"98","hashOfConfig":"75"},{"size":46,"mtime":1612372327705,"results":"99","hashOfConfig":"75"},{"size":162,"mtime":1612372327704,"results":"100","hashOfConfig":"75"},{"size":49,"mtime":1612506677023,"results":"101","hashOfConfig":"75"},{"size":343,"mtime":1612506677022,"results":"102","hashOfConfig":"75"},{"size":142,"mtime":1612340466654,"results":"103","hashOfConfig":"75"},{"size":195,"mtime":1612551561804,"results":"104","hashOfConfig":"75"},{"size":138,"mtime":1612372327702,"results":"105","hashOfConfig":"75"},{"size":1096,"mtime":1612506676924,"results":"106","hashOfConfig":"75"},{"size":1067,"mtime":1612506676923,"results":"107","hashOfConfig":"75"},{"size":2278,"mtime":1612506676917,"results":"108","hashOfConfig":"75"},{"size":7241,"mtime":1612523364764,"results":"109","hashOfConfig":"75"},{"size":2676,"mtime":1612506676917,"results":"110","hashOfConfig":"75"},{"size":124,"mtime":1612372327701,"results":"111","hashOfConfig":"75"},{"size":2079,"mtime":1612506676926,"results":"112","hashOfConfig":"75"},{"size":6243,"mtime":1612423397816,"results":"113","hashOfConfig":"75"},{"size":5062,"mtime":1612506676918,"results":"114","hashOfConfig":"75"},{"size":6784,"mtime":1612506676921,"results":"115","hashOfConfig":"75"},{"size":267,"mtime":1612432999992,"results":"116","hashOfConfig":"75"},{"size":6786,"mtime":1612523364765,"results":"117","hashOfConfig":"75"},{"size":1076,"mtime":1612420053795,"results":"118","hashOfConfig":"75"},{"size":3188,"mtime":1612523364763,"results":"119","hashOfConfig":"75"},{"size":4301,"mtime":1612508420351,"results":"120","hashOfConfig":"75"},{"size":1558,"mtime":1612523364705,"results":"121","hashOfConfig":"75"},{"size":3759,"mtime":1612523364766,"results":"122","hashOfConfig":"75"},{"size":346,"mtime":1612372327705,"results":"123","hashOfConfig":"75"},{"size":1096,"mtime":1612364611070,"results":"124","hashOfConfig":"75"},{"size":1527,"mtime":1612364611072,"results":"125","hashOfConfig":"75"},{"size":2675,"mtime":1612506677008,"results":"126","hashOfConfig":"75"},{"size":2229,"mtime":1612523364768,"results":"127","hashOfConfig":"75"},{"size":482,"mtime":1612506677023,"results":"128","hashOfConfig":"75"},{"size":728,"mtime":1612341122842,"results":"129","hashOfConfig":"75"},{"size":715,"mtime":1612372327703,"results":"130","hashOfConfig":"75"},{"size":723,"mtime":1612506677024,"results":"131","hashOfConfig":"75"},{"size":1467,"mtime":1612422260428,"results":"132","hashOfConfig":"75"},{"size":5200,"mtime":1612523364706,"results":"133","hashOfConfig":"75"},{"size":1678,"mtime":1612506676916,"results":"134","hashOfConfig":"75"},{"size":2949,"mtime":1612364611065,"results":"135","hashOfConfig":"75"},{"size":4769,"mtime":1612523364761,"results":"136","hashOfConfig":"75"},{"size":1990,"mtime":1612419686177,"results":"137","hashOfConfig":"75"},{"size":955,"mtime":1612364611065,"results":"138","hashOfConfig":"75"},{"size":7229,"mtime":1612521613728,"results":"139","hashOfConfig":"75"},{"size":1243,"mtime":1612551886788,"results":"140","hashOfConfig":"75"},{"size":356,"mtime":1612550796096,"results":"141","hashOfConfig":"75"},{"size":26,"mtime":1612516737877,"results":"142","hashOfConfig":"75"},{"size":151,"mtime":1612516788068,"results":"143","hashOfConfig":"75"},{"size":4879,"mtime":1612552753821,"results":"144","hashOfConfig":"75"},{"size":4751,"mtime":1612552653137,"results":"145","hashOfConfig":"75"},{"size":709,"mtime":1612523364705,"results":"146","hashOfConfig":"75"},{"size":317,"mtime":1612523364760,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1938ctc",{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"150"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"150"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"150"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"150"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"150"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"150"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"150"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"150"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"150"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"150"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"150"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"150"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"150"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"150"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"150"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"150"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"150"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"150"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"150"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"150"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"150"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"150"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"150"},"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/index.js",[],["321","322"],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/App.js",["323","324"],"import React from 'react'\nimport './App.css'\nimport { Main } from './pages/allOption/main/Main'\nimport { Routes } from './routes/Routes'\nimport {useDispatch} from 'react-redux'\nimport { getUserRequestPerformer } from './redux/userData/action'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  React.useEffect(() => {\n    dispatch(getUserRequestPerformer(1))\n  }, [])\n\n  return (\n    <div>\n      <Routes/>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/store.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/reportWebVitals.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/action.js",["325"],"import { COMMUNITY_UPDATE_SUCCESS, FAILURE, GET_USER_DATA_SUCCESS, REQUEST, USER_UPDATE_SUCCESS } from \"./actionType\"\nimport axios from 'axios'\n\nconst request = () => {\n    return{\n        type : REQUEST\n    }\n}\n\nconst failure = () => {\n    return{\n        type : FAILURE\n    }\n}\n\nconst userUpdateSuccess = () => {\n    return{\n        tyoe : USER_UPDATE_SUCCESS\n    }\n}\n\nconst communityUpdateSuccess = () => {\n    return{\n        type : COMMUNITY_UPDATE_SUCCESS\n    }\n}\n\nconst getUserDataSuccess = (payload) => {\n    return{\n        type : GET_USER_DATA_SUCCESS,\n        payload : payload\n    }\n}\n\nconst getUserRequestPerformer = (payload) => (dispatch) => {\n    dispatch(request())\n    return(\n        axios.get(`https://good-reads-users-mock.herokuapp.com/users/${payload}`)\n        .then((res) => {\n            dispatch(getUserDataSuccess(res.data))\n        })\n        .catch(() => {\n            dispatch(failure())\n        })\n    )\n}\n\nconst userUpdatePerformer = (payload) => (dispatch) => {\n    const {id, private_shelf, to_read, current_reading, completed_books} = payload\n    dispatch(request())\n    return axios.patch(`https://good-reads-users-mock.herokuapp.com/users/${id}`, {\n        private_shelf,\n        to_read,\n        current_reading,\n        completed_books\n    })\n    .then(() => {\n        dispatch(userUpdateSuccess())\n    })\n    .catch(() => {\n        dispatch(failure())\n    })\n}\n\nconst communityUpdatePerformer = (payload) => (dispatch) => {\n    dispatch(request())\n    return axios.post(`https://good-reads-users-mock.herokuapp.com/community_updates`,{\n        ...payload\n    })\n    .then(() => {\n        dispatch(communityUpdateSuccess())\n    })\n    .catch(() => {\n        dispatch(failure())\n    })\n}\n\nexport {getUserRequestPerformer, userUpdatePerformer, communityUpdatePerformer}","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/reducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/redux.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/reducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/reducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/landingPage_reducers.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/peoplePage_reducers.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/reducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/redux.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/postReducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/allOption_reducers.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/reducer.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/routes/Routes.jsx",["326"],"import React from \"react\";\nimport { Route, Switch, useParams, useRouteMatch } from \"react-router-dom\";\nimport { ShowBookCard } from \"../components/showBookCard/ShowBookCard\";\nimport { AllSearch } from \"../pages/allSearch/AllSearch\";\nimport { AllSpecificGenre } from \"../pages/allSpecificGenre/AllSpecificGenre\";\nimport { Genres } from \"../pages/genres/Genres\";\nimport { SpecificGenre } from \"../pages/specificGenre/SpecificGenre\";\nimport { Discussion } from \"../pages/Discussion/Discussion\";\nimport { DiscussionPost } from \"../pages/Discussion/DiscussionPost\";\n// import { Home } from \"../pages/Discussion/Home\";\nimport { Home } from \"../pages/Home/Home\";\nimport DiscussionArea from \"../pages/Discussion/DiscussionArea\";\nimport { Trivia } from \"../pages/Trivia/Trivia\";\nimport { People } from \"../pages/people/People.jsx\";\nimport { PeopleShow } from \"../pages/PeopleShow/PeopleShow\";\nimport { Navbar } from \"../components/Navbar/Navbar\";\nimport { MyBooks } from \"../pages/MyBooks/MyBooks\";\nimport { LandingPage } from \"../pages/Landing_page/LandingPage\";\nimport { Footer } from \"../components/Footer/Footer\";\nimport { Group } from \"../pages/allOption/Group/Group\";\nimport { Main } from \"../pages/allOption/main/Main\";\nimport { Chat } from \"../pages/messaging/chat/Chat\";\nimport { Quotes } from \"../pages/Quotes/Quotes\";\nimport { MyQuotes } from \"../pages/Quotes/MyQuotes\";\nimport { AddQuotes } from \"../pages/Quotes/AddQuotes\";\n\nconst Routes = () => {\n  let { path } = useRouteMatch();\n\n  console.log(path);\n  return (\n    <div className=\"container\">\n      <Navbar></Navbar>\n      <Switch>\n        <Route exact path=\"/login\">\n          <LandingPage />\n        </Route>\n        <Route exact path=\"/genres\">\n          <Genres></Genres>\n        </Route>\n        <Route exact path=\"/genre/:type\">\n          <SpecificGenre></SpecificGenre>\n        </Route>\n        <Route exact path=\"/shelf/show/:genreType\">\n          <AllSpecificGenre></AllSpecificGenre>\n        </Route>\n        <Route exact path=\"/book/show/:bookId\">\n          <ShowBookCard></ShowBookCard>\n        </Route>\n        <Route path=\"/search/:query\">\n          <AllSearch></AllSearch>\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/mybooks\">\n          <MyBooks />\n        </Route>\n        <Route exact path=\"/discussion\">\n          <Discussion />\n        </Route>\n        <Route exact path=\"/discussion/post\">\n          <DiscussionPost />\n        </Route>\n        <Route exact path=\"/discussion/area\">\n          <DiscussionArea />\n        </Route>\n        <Route exact path=\"/trivia\">\n          <Trivia />\n        </Route>\n        <Route exact path=\"/quotes\">\n          <Quotes />\n        </Route>\n        <Route exact path=\"/myQuotes\">\n          <MyQuotes />\n        </Route>\n        <Route exact path=\"/addQuotes\">\n          <AddQuotes />\n        </Route>\n        <Route exact path=\"/people\">\n          <People></People>\n        </Route>\n        <Route exact path=\"/people/show/:id\">\n          <PeopleShow />\n        </Route>\n        <Route exact path=\"/group\">\n          <Main />\n        </Route>\n        <Route exact path=\"/group/:g/:q\">\n          <Group />\n        </Route>\n        <Route exact path=\"/chat\">\n          <Chat />\n        </Route>\n\n        <Route>\n          <p style={{ textAlign: \"center\" }}>\n            <h1>Sorry, you’ve reached the end of the sidewalk.</h1>\n            <br />\n            <br />\n            Yes we’ll walk with a walk that is measured and slow, And we’ll go\n            <br />\n            where the chalk-white arrows go, For the children, they mark, and\n            <br />\n            the children, they know The place where the sidewalk ends.\n            <br />\n            <br />- Silverstein, Where the Sidewalk Ends\n          </p>\n        </Route>\n      </Switch>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport { Routes };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allOption/main/Main.jsx",["327","328","329","330","331"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Navbar } from \"../../../components/Navbar/Navbar\";\nimport style from \"./main.module.css\";\nimport {num} from \"../../people/people\"\nimport {Footer} from \"../../../components/Footer/Footer\"\nimport {  useRouteMatch,Link, Route,useHistory } from \"react-router-dom\";\nconst init = [\n  {\n    group_name: \"Finction stars\",\n    genre: \"fiction\",\n  },\n  {\n    group_name: \"Action pack\",\n    genre: \"Action\",\n  },\n];\n\nexport const Main = () => {\n  const [group_name, setName] = React.useState(\"\");\n  const [genre, setGenre] = React.useState(\"\");\n  const [group, setgroup] = React.useState(init);\n    const history = useHistory()\n  const handleCreate = () => {\n    const payload = {\n      group_name: group_name,\n      genre: genre,\n    };\n    return setgroup([...group, payload]);\n  };\n\n  const handleExplore=(q,g)=>{\n     return history.push(`/group/${g}/${q}`)\n  }\n\n\n\n  return (\n    <>\n        Join your groups\n      <div className={style.box}>\n        <input\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"group name\"\n        />\n        <input\n          type=\"text\"\n          onChange={(e) => setGenre(e.target.value)}\n          placeholder=\"genre\"\n        />\n        <Button\n          onClick={handleCreate}\n          style={{ marginLeft: \"10px\" }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          create group\n        </Button>\n        {group?.map((item) => {\n          return (\n            <>\n              <div className={style.groupBox}>\n                  <div className={style.pBox}>\n                  <p style={{ color: \"#32362D\" }}>\n                  {item.group_name}<br />\n                  {item.genre} <br />\n                  {num()} members{\" \"}\n                </p>\n                  </div>\n                  <div className={style.btnBox}>\n                    <img src=\"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/old-books-arranged-on-shelf-royalty-free-image-1572384534.jpg?crop=0.668xw:1.00xh;0,0&resize=480:*\" alt=\"alt\"/>\n                  </div>\n                <Button \n                onClick={()=>handleExplore(item.genre,item.group_name)}\n                  style={{\n                    marginLeft: \"50px\",\n                    height: \"50px\",\n                    marginTop: \"20px\",\n                    background: \"brown\",\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Explore the group\n                </Button>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/people/People.jsx",["332"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Footer } from \"../../components/Footer/Footer\";\nimport { getPeopleData } from \"../../redux/peoplePage/action\";\nimport { num } from \"./people\";\nimport style from \"./people.module.css\";\nexport const People = () => {\n  const [follow,setFollow] = React.useState(false)\n  const data = useSelector(state=>state.peopleData)\n  const dispatch = useDispatch()\n  React.useEffect(()=>{\n      dispatch(getPeopleData())\n  },[dispatch])\n\n  const handlefollow =()=>{\n    setFollow(!follow)\n  }\n  return (\n    <div>\n    <>\n      <div className={style.box1}>\n        <br />\n        <h2>Most popular 100 reviewers this week</h2>\n        <br />\n        <p>\n          this week{\" \"}\n          <h style={{ opacity: \"0.5\" }}>(generated Jan 27, 2021 12:29PM)</h>\n        </p>\n        <br />\n        <p style={{ fontSize: \"13px\" }}>\n          <h>this week</h> | <h>this month</h> | <h>last 12 months</h> |{\" \"}\n          <h>all</h>{\" \"}\n        </p>\n        <br />\n      </div>\n      <div className={style.profileBox}>\n       {\n         data.userdata?.map(item =>{\n          return  <>\n        <div className={style.container}>\n        <div className={style.numberbox}>\n          <p>1.</p>\n        </div>\n        <div className={style.imgContainer}>\n          <img src={item.image_url} alt=\"alt\" />\n        </div>\n        <div className={style.detailsContainer}>\n          <p style={{ color: \"#00635d\" }}><Link to={`people/show/${item.id}`}>{item.name}</Link></p>\n          <p>city</p>\n          <p style={{ color: \"#00635d\" }}>{item.private_shelf.length} books | {item.following.length} friends</p>\n        </div>\n        <div\n          style={{ marginLeft: \"50px\" }}\n          className={style.detailsContainer}\n        >\n          <p style={{ color: \"#00635d\" }}> {num()} votes this week</p>\n          <p style={{ color: \"#00635d\" }} onClick={handlefollow}>{follow?\"Unfollow reviews\":\"Follow reviews\"}</p>\n        </div>\n      </div>\n    </>\n         })\n       }\n        \n      </div>\n      <div className={style.meetpeoplebox}>\n        <p>Meet People</p>\n        <p style={{ fontSize: \"13px\", color: \"#00635d\" }}>\n          top readers\n          <br /> top reviewers <br />\n          most popular reviewers\n          <br /> most followed top librarians\n          <br /> recent reviews\n        </p>\n      </div>\n      </>\n    </div>\n    \n  );\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/userData/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/actionTypes.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/actionTypes.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/actionTypes.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/actionTypes.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionType.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/people/people.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allSpecificGenre/AllSpecificGenre.jsx",["333"],"import React from 'react'\nimport styles from './AllSpecificGenre.module.css'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\nimport { genreSearchPerformer } from '../../redux/genres/action'\n\nconst AllSpecificGenre = () => {\n    const genreItems = useSelector(state => state.genre.genreItems)\n    const {genreType} = useParams()\n    const dispatch = useDispatch()\n    let endpoint = genreType.replace(/%20/g, \" \")\n\n    React.useEffect(() => {\n        dispatch(genreSearchPerformer(endpoint))\n    }, [])\n\n    return (\n        <div className = {styles.container}>\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\n            {\n                genreItems?.map((item) => {\n                    return(\n                        <ShelfBookCard\n                            key = {item.id}\n                            item = {item}\n                        ></ShelfBookCard>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport {AllSpecificGenre}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allSearch/AllSearch.jsx",["334"],"import React from 'react'\nimport styles from './AllSearch.module.css'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport {ShelfBookCard} from '../../components/shelfBookCard/ShelfBookCard'\nimport { bookSearchPerformer } from '../../redux/search/action'\n\nconst AllSearch = () => {\n    const searchItems = useSelector(state => state.book.searchItems)\n    const {query} = useParams()\n    const dispatch = useDispatch()\n    let endpoint = query.replace(/%20/g, \" \")\n\n    React.useEffect(() => {\n        dispatch(bookSearchPerformer(endpoint))\n    }, [])\n\n    return (\n        <div className = {styles.container}>\n            <h3>{endpoint.toUpperCase()} BOOKS</h3>\n            {\n                searchItems?.map((item) => {\n                    return(\n                        <ShelfBookCard\n                            key = {item.id}\n                            item = {item}\n                        ></ShelfBookCard>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport {AllSearch}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/DiscussionArea.jsx",["335","336","337"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./DiscussionArea.module.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getDataPost,\n  Post1Dis,\n  getDataPost1,\n} from \"../../redux/Discussion/action\";\nconst DiscussionArea = () => {\n  const data = useSelector((state) => state.disPost.data);\n  const isLoading1 = useSelector((state) => state.disPost.isLoading1);\n  const isLoading2 = useSelector((state) => state.disPost.isLoading2);\n  const comments = useSelector((state) => state.disPost.comments);\n  console.log(\"comme\", comments);\n  const dispatch = useDispatch();\n  // React.useEffect(() => {\n  //   dispatch(getDataPost());\n  // }, []);\n  const [post, setPost] = React.useState(\"\");\n  const handlePost = () => {\n    const payload = {\n      post,\n    };\n    dispatch(Post1Dis(payload));\n  };\n\n  return (\n    <div>\n      {!isLoading1 ? (\n        <div>.....isLoading</div>\n      ) : (\n        <div className={styles.cont}>\n          <h1>\n            <Link>{data.bookname}</Link> discussion\n          </h1>\n          <h3>topic:{data.topic}</h3>\n          <label htmlFor=\"\">\n            comment\n            <br />\n            <textarea\n              name=\"post\"\n              value={post}\n              onChange={(e) => setPost(e.target.value)}\n              cols=\"60\"\n              rows=\"5\"\n            ></textarea>\n          </label>\n          <br />\n          <button onClick={handlePost}>Post</button>\n          <div>\n            <br />\n            <br />\n            <div>\n              <span>Comments (showing 1-1)</span>\n              <div>\n                <div className={styles.divPostHeading}>\n                  <p>\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\n                  </p>\n                </div>\n                <p>{data.comment}</p>\n              </div>\n              <div>\n                <div className={styles.divPostHeading}>\n                  <p>\n                    message 1:by <span style={{ color: \"blue\" }}> Hkg</span>{\" \"}\n                  </p>\n                </div>\n                <p>{comments.comment}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DiscussionArea;\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Home/Home.jsx",["338","339"],"import React from 'react'\nimport { Post } from '../../components/Post/Post'\nimport styles from \"./Home.module.css\"\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\"\nimport { updatePosts } from '../../redux/Post/action';\nimport { getPosts } from '../../redux/Post/action'\nimport { getBooks } from '../../redux/myBooks/action'\nimport { Link } from 'react-router-dom';\nimport { CurrentlyReading } from '../../components/CurrentlyReading/CurrentlyReading';\nimport { WantToRead } from '../../components/WantToRead/WantToRead';\n\n\nconst Home = () => {\n\n    const posts = useSelector(state => state.posts.posts);\n    const {books, wantToRead, currentlyReading, read} = useSelector(state => state.myBooks, shallowEqual)\n    const dispatch = useDispatch();\n    const [wantToReadData, setWantToReadData] = React.useState([]);\n    const [currentlyReadingData, setCurrentlyReadingData] = React.useState([]);\n\n    React.useEffect(()=> {\n        dispatch(getPosts());\n        dispatch(getBooks());\n        // getCurrentlyReading();\n        // getWantToRead();\n    }, [dispatch])\n\n    React.useEffect(() => {\n        getCurrentlyReading();\n        getWantToRead();\n    }, [books])\n\n\n    const getWantToRead = () => {\n        if(books[0] !== undefined){\n            const tempData = books[0].filter(item => {\n                for(let i in wantToRead[0][0]){\n                    if(wantToRead[0][0][i].id === item.id){\n                        return item;\n                    }\n                }\n            })\n            setWantToReadData(tempData);\n        }\n    }\n\n    const getCurrentlyReading = () => {\n        if(books[0] !== undefined){\n            const tempData = books[0].filter(item => {\n                for(let i in currentlyReading[0][0]){\n                    if(currentlyReading[0][0][i].id === item.id){\n                        return item;\n                    }\n                }\n            })\n            setCurrentlyReadingData(tempData);\n        }\n    }\n\n \n\n    // React.useEffect(() => {\n        \n    // }, [])\n\n    const handleComment = (id, commentObj, e) => {\n        e.preventDefault();\n        dispatch(updatePosts(id, commentObj))\n    }\n\n    const handleLike = (id) => {\n        dispatch(updatePosts(id, null))\n    }\n\n\n    return (\n        <div className={styles.home__cont}>\n            <div className={styles.home__left}>\n                <h4>CURRENTLY READING</h4>\n                {        \n                    currentlyReadingData?.map(item => \n                        <CurrentlyReading key={item.id} \n                        title={item.volumeInfo.title} \n                        author={item.volumeInfo.authors[0]}\n                        image={item.volumeInfo.imageLinks !== undefined ? item.volumeInfo.imageLinks.smallThumbnail: \"https://via.placeholder.com/100x100\"}/>\n                    )\n                }\n                <hr className={styles.horizontal_rule}/>\n                <h4>WANT TO READ</h4>\n                {\n                    wantToReadData?.map(item => \n                        <WantToRead key={item.id} image={item.volumeInfo.imageLinks!== undefined ? item.volumeInfo.imageLinks.smallThumbnail : \"https://via.placeholder.com/100x100\"}/>\n                    )\n                }\n                <Link to=\"#\">View all books</Link>\n                <hr className={styles.horizontal_rule}/>\n                <div className={styles.bookshelves}>\n                    <h4>BOOKSHELF</h4>\n                    <div>\n                        <Link to=\"#\">4 Want to Read</Link>\n                    </div>\n                    <div>\n                        <Link to=\"#\">2 Currently Reading</Link>\n                    </div>\n                    <div>\n                        <Link to=\"#\">1 Read</Link>\n                    </div>\n                </div>\n            </div>\n            <div className={styles.home__mid}>\n                <h4>UPDATES</h4>\n                {\n                    posts[0]?.map(item => \n                        <Post {...item} key={item.id} handleComment={handleComment} handleLike ={handleLike}/>\n                        )\n                }\n            </div>\n            <div className={styles.home__right}>\n                <div className={styles.right__cards}>\n                    <h4 style={{marginBottom: \"10px\"}}>NEWS AND INTERVIEWS</h4>\n                    <h4 style={{marginBottom: \"10px\"}}>February's Most Anticipated Young Adult Books</h4>\n                    <img src=\"https://images.gr-assets.com/blogs/1611274039p7/2005.jpg\" alt=\"\"/>\n                    <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>31 likes . 2 comments</p>\n                </div>\n                <hr className={styles.horizontal_rule}/>\n                <div className={styles.right__cards}>\n                    <h4 style={{marginBottom: \"10px\"}}>RECOMMENDATIONS</h4>\n                    <h4 style={{marginBottom: \"10px\"}}>February's Most Anticipated Young Adult Books</h4>\n                    <img src=\"https://images.gr-assets.com/blogs/1611273545p7/2004.jpg\" alt=\"\"/>\n                    <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>31 likes . 2 comments</p>\n                </div>\n                <hr className={styles.horizontal_rule}/>\n                <div className={styles.footer}>\n                    <div className={styles.footer__cont}>\n                        <div className={styles.cont__left}>\n                            <h4 style={{margin: \"10px 0\"}}>COMPANY</h4>\n                            <p>About Us</p>\n                            <p>Career</p>\n                            <p>Terms</p>\n                            <p>Privacy</p>\n                            <p>Interest Based Ads</p>\n                            <p>Ad Prefernces</p>\n                            <p>Help</p>\n                        </div>\n                        <div className={styles.cont__right}>\n                            <h4 style={{margin: \"10px 0\"}}>WORK WITH US</h4>\n                            <p>Authors</p>\n                            <p>Advice</p>\n                            <p>Authord and Ad Blogs</p>\n                            <p>API</p>\n                        </div>\n                    </div>\n                    <hr className={styles.horizontal_rule}/>\n                    <h4 style={{margin: \"10px 0\"}}>CONNECT</h4>\n                    <div className={styles.socials}>\n                        <i class=\"fab fa-facebook-square\"></i>\n                        <i class=\"fab fa-twitter-square\"></i>\n                        <i class=\"fab fa-instagram-square\"></i>\n                        <i class=\"fab fa-linkedin\"></i>\n                    </div>\n                </div>\n                <hr className={styles.horizontal_rule}/>\n                <div style={{marginBottom: \"10px\"}}>\n                    <img src=\"https://s.gr-assets.com/assets/app/badge-ios-desktop-homepage-6ac7ae16eabce57f6c855361656a7540.svg\" alt=\"\"/>\n                    <img src=\"https://s.gr-assets.com/assets/app/badge-android-desktop-home-0f517cbae4d56c88a128d27a7bea1118.png\" alt=\"\"/>\n                </div>\n                <p style={{marginBottom: \"10px\"}}>Mobile Version</p>\n                <p style={{fontSize:\"13px\", color:\"#8E8A81\"}}>© 2021, GoodReadsClone</p>\n            </div>\n        </div>\n    )\n}\n\nexport {Home}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/DiscussionPost.jsx",["340","341","342"],"import React from \"react\";\nimport styles from \"./DiscussionPost.module.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { getPostDis, getDataPost } from \"../../redux/Discussion/action\";\nconst DiscussionPost = () => {\n  const dispatch = useDispatch();\n  const [details, setDetails] = React.useState({\n    bookname: \"\",\n    topic: \"\",\n    comment: \"\",\n    addBook: \"\",\n    author: \"\",\n  });\n  const handleAdd = (e) => {\n    const { name, value } = e.target;\n    setDetails({ ...details, [name]: value });\n  };\n  const handleSubmit = () => {\n    const payload = {\n      bookname,\n      topic,\n      comment,\n      addBook,\n      author,\n    };\n    dispatch(getPostDis(payload));\n    setDetails({\n      ...details,\n      bookname: \"\",\n      author: \"\",\n      topic: \"\",\n      comment: \"\",\n      addBook: \"\",\n    });\n  };\n  const { bookname, addBook, author, topic, comment } = details;\n  return (\n    <div>\n      <div className={styles.cont}>\n        <p className={styles.p1}>Post a New Discussion Topic</p>\n        <label htmlFor=\"\" className={styles.p2}>\n          Book this topic is about{\" \"}\n          <input\n            className={styles.input1}\n            type=\"text\"\n            placeholder=\"Start typing the new book name....\"\n            name=\"bookname\"\n            value={bookname}\n            onChange={handleAdd}\n          />\n        </label>\n        <br />\n        <br />\n        <label className={styles.p3}>\n          topic\n          <br />\n          <input\n            className={styles.input2}\n            type=\"text\"\n            name=\"topic\"\n            value={topic}\n            onChange={handleAdd}\n          />\n        </label>\n        <br />\n        <br />\n        <input type=\"checkbox\" />{\" \"}\n        <label htmlFor=\"\" className={styles.p2}>\n          this is a discussion question\n        </label>\n        <br />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <p className={styles.p3}>commet</p>\n          <Link>\n            <p>add book/author</p>\n          </Link>\n        </div>\n        <textarea\n          name=\"\"\n          cols=\"58\"\n          rows=\"7\"\n          style={{ marginTop: \"-15px\" }}\n          name=\"comment\"\n          value={comment}\n          onChange={handleAdd}\n        ></textarea>\n        <br />\n        <Link to=\"/discussion/area\">\n          <button onClick={handleSubmit}>Post</button>\n        </Link>\n        <br />\n        <br />\n        <Link>\n          <p>cancel</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport { DiscussionPost };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/PeopleShow/PeopleShow.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/specificGenre/SpecificGenre.jsx",["343"],"import React from 'react'\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\nimport { Link, useHistory, useParams } from 'react-router-dom'\nimport { genreSearchPerformer} from '../../redux/genres/action'\nimport styles from './SpecificGenre.module.css'\n\nconst SpecificGenre = () => {\n    const {genreItems} = useSelector(state => state.genre, shallowEqual)\n    const {type} = useParams()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    React.useEffect(() => {\n        dispatch(genreSearchPerformer(type))\n    }, [])\n\n    const handleBook = (bookId) => {\n        history.push(`/book/show/${bookId}`)\n    }\n\n    return (\n        <div className = {styles.container}>\n            <h3>{type.toUpperCase()} BOOKS</h3>\n            <div className = {styles.bookContainer}>\n                {\n                    genreItems?.map((item, i) => {\n                        if(i < 15){\n                            const {imageLinks, title} = item.volumeInfo\n                            const src = imageLinks === undefined ? \"https://via.placeholder.com/110x180.png?text=No+image\" : imageLinks.smallThumbnail\n                            return(\n                                <img\n                                    onClick = {() => handleBook(item.id)}\n                                    key = {item.id}\n                                    className = {styles.img}\n                                    src =  {src}\n                                    alt = {title}\n                                ></img>\n                            )\n                        }\n                        else{\n                            return null\n                        } \n                    })\n                }\n            </div>\n            {\n                genreItems?.length > 15 \n                ? <div className = {styles.linkDiv}>\n                    <Link className = {styles.link} to = {`/shelf/show/${type}`}>{`More ${type} books...`}</Link>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nexport {SpecificGenre}\n\n\n\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Trivia/Trivia.jsx",["344","345","346"],"import React, { useState } from \"react\";\nimport styles from \"./Trivia.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQuesData } from \"../../redux/Trivia/action\";\nimport TriviaQuestuion from \"./TriviaQuestuion\";\nimport axios from \"axios\";\nimport { Search } from \"../../components/searchBar/Search\";\nconst Trivia = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.trivia.question);\n  const isLoading = useSelector((state) => state.trivia.isLoading);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  React.useEffect(() => {\n    dispatch(getQuesData());\n  }, []);\n  React.useEffect(() => {\n    getImages();\n  }, [currentIndex]);\n  const [images, setImages] = React.useState(\"\");\n  const [prevImages, setPrevImages] = React.useState(\"\");\n  const getImages = () => {\n    return axios\n      .get(\n        \"https://www.googleapis.com/books/v1/volumes?q=fantasy&AIzaSyB8wyhDZVXdQlGutVzyqQfsCA9dVhe0b4I\"\n      )\n      .then((res) => {\n        console.log(\n          \"goglebook\",\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\n        );\n        setImages(\n          res.data.items[currentIndex].volumeInfo.imageLinks.smallThumbnail\n        );\n        setPrevImages(\n          res.data.items[currentIndex - 1].volumeInfo.imageLinks.smallThumbnail\n        );\n      })\n      .catch((err) => {\n        console.log(\"err in google book api\");\n      });\n  };\n  const [recentQues, setRecentQues] = useState([]);\n\n  const [score, setScore] = useState(0);\n  const [correct, setCorrect] = useState(\"\");\n  const [quesans, setQuesAns] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(0);\n  const handleAnswer = (answer) => {\n    setCurrentIndex((prev) => prev + 1);\n    if (answer === data[currentIndex].correct_answer) {\n      setScore((prev) => prev + 1);\n      setCorrect(true);\n      setQuesAns((prev) => prev + 1);\n    }\n    if (answer !== data[currentIndex].correct_answer) {\n      setCorrect(false);\n      setQuesAns((prev) => prev + 1);\n    }\n    setRecentQues([data[currentIndex]]);\n  };\n  const handleSkip = (one) => {\n    setCurrentIndex((prev) => prev + 1);\n    setSkipped((prev) => prev + 1);\n  };\n  return (\n    <div>\n      <div className={styles.outer}>\n        <div className={styles.outer__left}>\n          <p className={styles.outer__left__heading}>Never-Ending Book Quiz</p>\n          <div className={styles.outer__left__recentQues}>\n            <p\n              style={{\n                marginBottom: \"5px\",\n                fontSize: \"13px\",\n                fontWeight: \"700\",\n              }}\n            >\n              LAST ANWER\n            </p>\n            <hr />\n            <div className={styles.outer__left__recentQues1}>\n              {recentQues.length > 0 ? (\n                <div>\n                  <p style={{ fontSize: \"15px\" }}>{recentQues[0].question}</p>\n                  <img\n                    src={prevImages}\n                    alt=\"images\"\n                    width=\"70px\"\n                    height=\"70px\"\n                  />\n                  <h3>Answer Res</h3>\n                  <p>\n                    {correct === true ? (\n                      <p style={{ color: \"green\", fontSize: \"19px\" }}>\n                        \"You got it Right!\"\n                      </p>\n                    ) : (\n                      <p style={{ color: \"red\", fontSize: \"19px\" }}>\n                        {\" \"}\n                        \"You got it Wrong!\"\n                      </p>\n                    )}\n                  </p>\n                  <p style={{ color: \"green\" }}>\n                    a.{recentQues[0].correct_answer}\n                  </p>\n                  <p style={{ color: \"red\" }}>\n                    b.{recentQues[0].incorrect_answers[0]}\n                  </p>\n                  <p style={{ color: \"red\" }}>\n                    c.{recentQues[0].incorrect_answers[1]}\n                  </p>\n                  <p style={{ color: \"red\" }}>\n                    d.{recentQues[0].incorrect_answers[2]}\n                  </p>\n                </div>\n              ) : (\n                <div>\n                  <p className={styles.outer__left__loadingParts}>\n                    Answer the question to the right to see the results!\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className={styles.myStats}>\n            <p\n              style={{\n                marginBottom: \"5px\",\n                fontSize: \"13px\",\n                fontWeight: \"700\",\n              }}\n            >\n              MY STATS\n            </p>\n            <hr />\n            <p className={styles.static}>question answerd:{quesans}</p>\n            <p className={styles.static}>correct:{score}</p>\n            <p className={styles.static}>skipped:{skipped}</p>\n          </div>\n        </div>\n        <div className={styles.outer__right}>\n          <div className={styles.outer__right__search}>\n            <Link to=\"/trivia\">\n              <p>All Trivia</p>\n            </Link>\n            |\n            <Link to=\"/booksection\">\n              <p>My Books</p>\n            </Link>\n            |\n            <Link to=\"/homePage\">\n              <p>Browse</p>\n            </Link>\n            <input type=\"text\" placeholder=\"Find the books.....\" />\n            <button>Search</button>\n          </div>\n          <div className={styles.outer__right__quiz__heading}>\n            <p style={{ fontWeight: \"700\", fontSize: \"13px\" }}>\n              TRIVIA QUESTIONS\n            </p>\n            <Link to=\"/addQuestion\">\n              <p style={{ fontSize: \"10px\" }}>Add a questions</p>\n            </Link>\n          </div>\n          <div className={styles.outer__right__quiz}>\n            {isLoading ? (\n              <div>\n                <h1>Quiz is Loading guys.......</h1>\n              </div>\n            ) : (\n              <TriviaQuestuion\n                data={data[currentIndex]}\n                handleAnswer={handleAnswer}\n                handleSkip={handleSkip}\n                images={images}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Trivia };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Landing_page/LandingPage.jsx",["347"],"import React from \"react\";\nimport style from \"./landing.module.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Footer } from \"../../components/Footer/Footer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { name,sendAuthLogin,sendAuthRegister } from \"../../redux/landingPage/action\";\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    color: \"white\",\n    background: \"#333333\",\n    marginTop: \"5px\",\n    marginLeft: \"10px\",\n    \"&:hover\": {\n      background: \"#424242\",\n    },\n  },\n  btn2: {\n    color: \"white\",\n    background: \"#FFD767\",\n    marginTop: \"55px\",\n    marginLeft: \"10px\",\n    \"&:hover\": {\n      background: \"#ffde82\",\n    },\n  },\n}));\nexport const LandingPage = () => {\n  const classes = useStyles();\n  const [email,setEmail] = React.useState()\n  const [email2,setEmail2] = React.useState()\n  const [username,setUsername] = React.useState()\n  const [password,setPassword] = React.useState()\n  const [password2,setPassword2] = React.useState()\n  const signin = useSelector(state=>state.signin.login)\n  const dispatch = useDispatch()\n  const handleRegister =()=>{\n      let payload ={\n        email:email,\n        password:password\n      }\n      dispatch(name(username))\n      dispatch(sendAuthRegister(payload))\n      setEmail(\"\")\n      setPassword(\"\")\n      setUsername(\"\")\n  }\n  const handleLogin =()=>{\n    let payload ={\n      email:email2,\n      password:password2\n    }\n    dispatch(sendAuthLogin(payload))\n    setEmail(\"\")\n    setPassword(\"\")\n}\nconsole.log(signin)\n  return (\n    <>\n      <div className={style.navBar}>\n        <img\n          className={style.logo}\n          src=\"https://s.gr-assets.com/assets/home/header_logo-8d96d7078a3d63f9f31d92282fd67cf4.png\"\n          alt=\"logo\"\n        />\n        <div className={style.loginContainer}>\n          <input onChange={(e)=>setEmail2(e.target.value)}  type=\"email\" placeholder=\"email\" />\n          <input onChange={(e)=>setPassword2(e.target.value)}   type=\"password\" placeholder=\"password\" />\n          <Button onClick={handleLogin}  className={classes.btn} variant=\"contained\" color=\"primary\">\n            sign in\n          </Button>\n          <p>Forget it ?</p>\n        </div>\n      </div>\n      <div className={style.banner}>\n        <div className={style.bannerImg}>\n          <p>Announcing the</p>\n          <h1>\n            Best Book\n            <br />\n            of 2021\n          </h1>\n          <p id={style.bannerImg_p}>\n            See the winners in our community of readers\n          </p>\n        </div>\n        <div className={style.signUpContainer}>\n          <p>New here? Create a free account!</p>\n          <input onChange={(e)=>setUsername(e.target.value)} value={username} type=\"name\" placeholder=\"username\" />\n          <br />\n          <input onChange={(e)=>setEmail(e.target.value)}  type=\"email\" placeholder=\"email\" />\n          <br />\n          <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" placeholder=\"password\" />\n          <br />\n          <Button onClick={handleRegister} className={classes.btn} variant=\"contained\" color=\"primary\">\n            sign up\n          </Button>\n          <p>\n            By clicking “Sign up” I agree to the Goodreads Terms of Service and\n            confirm that I am at least 13 years old.\n          </p>\n        </div>\n        {/* <img className={style.bookpng} src=\"https://freepngimg.com/thumb/categories/2299.png\" alt=\"alt\"/> */}\n      </div>\n      <div className={style.banner2}>\n        <div className={style.banner2_container1}>\n          <h2 id={style.banner2_container1_h2}>\n            12th Annual Goodreads Choice Awards\n          </h2>\n          <p>\n            See the winners in the only major book awards decided by readers.\n          </p>\n          <div className={style.list}>\n            <li>Best Fiction</li>\n            <li>Best Romance</li>\n            <li>Best Action</li>\n            <li>Best Non-Fiction</li>\n          </div>\n          <div className={style.list}>\n            <li>Best Humor</li>\n            <li>Best Fantasy</li>\n            <li>Best Love</li>\n            <li>Best Drama</li>\n          </div>\n          <div className={style.list}>\n            <li>Best Mentor-Books</li>\n            <li>Best Historical-Fiction</li>\n            <li>Best Action</li>\n            <li>Best Young adult</li>\n          </div>\n          <Button className={classes.btn2} variant=\"contained\" color=\"primary\">\n            see for the winners\n          </Button>\n        </div>\n        <div className={style.books }>\n            <p style={{fontSize: \"18px\"}}>News & Interviews</p>\n            <br/>\n            <p>7 greater books hitting shelves This Week</p>\n            <div className={style.bookshelves}>\n                <img src=\"https://images.gr-assets.com/blogs/1611614949p7/1998.jpg\" alt=\"img\"/>\n            </div>\n            <br/>\n            <br/>\n            <p style={{fontSize: \"13px\",opacity:\"0.5\"}}>15 likes - <span>11 comments</span></p>\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/allOption/Group/Group.jsx",["348","349"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { GetGroupData } from \"../../../redux/allOptions/action\";\nimport style from \"./Group.module.css\";\nimport {v4 as uuid} from \"uuid\"\n\nconst init =[{\n    name:\"manish\",\n    topic:\"I love graphic novels. How do you find working as a writer in this format? What is the biggest challenge over a novel?\",\n    message:\" Writing graphic novels is much easier for me on every level. I visualize my novels as I write them and I love writing dialogue, both of which naturally lend themselves to the graphic novel format.\",\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\n    id:\"1\"\n},\n{\n    name:\"mandar\",\n    topic:\"What books are on your summer reading list this year?\",\n    message:\" suggest me some good books\",\n    replay:[{r:\"hello manish\"},{r:\"hello manish\"}],\n    id:\"2\"\n}]\n\n\nexport const Group = () => {\n  let { q, g } = useParams();\n  const[message,setMsg] = React.useState(\"\")\n  const[topic,setTopic] = React.useState(\"\")\n  const [chat,setChat] = React.useState(init)\n  const [num, setNum] = React.useState(4);\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.group_reducer.group_data);\n  React.useEffect(() => {\n    dispatch(GetGroupData(q, num));\n  }, []);\n\n  const hanldeAddChat =(name)=>{\n        const payload={\n            name:name,\n            topic:topic,\n            message:message,\n            id:uuid()\n        }\n        setChat([...chat,payload])\n        setMsg(\"\")\n        setTopic(\"\")\n  }\n\n  \n  const [replay,setReplay] = React.useState(\"\")\n\n  const [replayMsg ,SetReplayMsg] = React.useState([])\n  const hanldeAddReplay =(id)=>{\n      const payload = [id,replay]\n      SetReplayMsg([...replayMsg,payload])\n    }\n    \n    console.log(replayMsg)\n  return (\n    <div>\n      <div className={style.box}>\n        <img src={data[0]?.volumeInfo.imageLinks.smallThumbnail} alt=\"alt\" />\n        <h1 className={style.groupName}>{g}</h1>\n        <br/>\n        <p>\n          When anyone on the TODAY team's looking for a book recommendation,\n          there's only one person to turn to: Jenna Bush Hager.<br/><br/> Jenna will\n          select a book and as you read along, we'll be posting updates right\n          here with thought-provoking conversation starters. We hope you'll\n          engage with the rest of the #ReadWithJenna community to make this book\n          club your own.\n        </p>\n        <br/>\n        <p style={{opacity:\"0.3\"}}>tags -- book-club, book-clubs, book-group, fiction, jenna-bush-hager, literature, today, and women-authors</p>\n        <br/>\n        <p style={{opacity:\"0.3\"}}>group type -- This is a public group. Anyone can join and invite others to join.</p>\n        <br />\n        <h2 style={{opacity:\"0.5\"}}>#Read with the group books</h2>\n        <div className={style.bookBox}>\n        {data?.map((item) => {\n            return (\n                <>\n              <div>\n                <img\n                  src={\n                      item.volumeInfo.imageLinks.smallThumbnail === undefined\n                      ? \"https://via.placeholder.com/150\"\n                      : item.volumeInfo.imageLinks.smallThumbnail\n                    }\n                    alt=\"\"\n                    />\n              </div>\n            </>\n          );\n        })}\n      </div>\n        <button>Join Group</button>\n      </div>     \n      <div className={style.box1}>\n          <p style={{borderBottom:\"1px solid grey\"}}>Announcement</p>\n          <div className={style.aBox}>\n            <p>Book Club Q&A with Author</p>\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\n          </div>\n          <div className={style.aBox}>\n            <p>Our December book pick is The Bluest Eye by Toni Morrison</p>\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\n          </div>\n          <div className={style.aBox}>\n            <p>Our January 2021 book pick is Black Buck by Mateo Askaripour</p>\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\n          </div>\n          <div className={style.aBox}>\n            <p>Our July book club pick is Evvie Drake Starts Over</p>\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\n          </div>\n          <div className={style.aBox}>\n            <p>Share your thoughts about Black Buck</p>\n            <p style={{fontSize:\"13px\",opacity:\"0.3\"}}>By Bryan · 7 posts <h style={{color:\"red\"}}>(7 new) </h>· 158 views\n            <span style={{marginLeft:\"60px\"}}>last updated Feb 02, 2021 06:00PM</span></p>\n          </div>\n      </div>\n      <h1 style={{ textAlign: \"center\" }}>Group Discussion</h1>\n      <div className={style.chatContainer}>\n      {\n          chat.map(item=>{\n            return <>\n          \n              <div key={item.id} className={style.chat}>\n            <h2>{item.topic}</h2>\n        <p className={style.message}><h style={{opacity:\"0.5\",color:\"#4e5545\"}}>{item.name}</h> <h style={{marginLeft:\"25px\"}}>{item.message}</h></p>\n            <div className={style.replaySection}>\n                {\n                    replayMsg.map(i=> item.id ===i[0]? \n                         <p style={{marginTop:\"30px\"}}> {i[1]} <h style={{opacity:\"0.5\",color:\"#4e5545\",marginLeft:\"20px\",fontSize:\"10px\"}}>replay by {item.name}</h></p>\n                    :null)\n                    }\n            </div>\n            <input className={style.replayInput} onChange={(e)=>setReplay(e.target.value)} type=\"text\"  />\n            <button onClick={()=>hanldeAddReplay(item.id)} style={{marginLeft:\"10px\", marginBottom: \"10px\",marginTop:\"20px\",}} className={style.replay}>comment</button>\n        </div>\n            </>})\n      }\n      </div>\n      <div className={style.chatInputBox}>\n        <input className={style.sendInput}  value={topic} onChange={(e)=>setTopic(e.target.value)} type=\"text\" placeholder=\"topic\" />\n        <input className={style.sendInput}  value={message} onChange={(e)=>setMsg(e.target.value)} type=\"text\" placeholder=\"discussion\" />\n        <button onClick={()=>hanldeAddChat(\"saravana\")} className={style.send} >Send</button>\n      </div>\n    </div>\n  );\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Discussion/Discussion.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/MyBooks/MyBooks.jsx",["350","351","352"],"import React from 'react'\nimport {MyBooksCard} from \"../../components/MyBooksCard/MyBooksCard\"\nimport {shallowEqual, useDispatch, useSelector} from \"react-redux\"\nimport { getBooks } from '../../redux/myBooks/action'\nimport styles from \"./MyBooks.module.css\"\n\nconst MyBooks = () => {\n\n    const {books, wantToRead, currentlyReading, read} = useSelector(state => state.myBooks, shallowEqual)\n\n    const [data, setData] = React.useState([]);\n    const [sortOpt, setSortOpt] = React.useState(\"title\")\n    const [checked, setChecked] = React.useState(\"asc\")\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=> {\n        dispatch(getBooks());\n    }, [dispatch])\n\n\n    const handleChange = (value) => {\n        console.log(value);\n        if(value ===\"all\"){\n            setData(books[0])\n        }else if(value === \"read\"){\n            const tempData = books[0].filter(item => {\n                for(let i in read[0][0]){\n                    console.log(read[0][0][i]);\n                    if(read[0][0][i].id === item.id){\n                        return item;\n                    }\n                }\n            })\n            setData(tempData);\n        }else if(value === \"currently_reading\"){\n            const tempData = books[0].filter(item => {\n                for(let i in currentlyReading[0][0]){\n                    console.log(currentlyReading[0][0][i]);\n                    if(currentlyReading[0][0][i].id === item.id){\n                        return item;\n                    }\n                }\n            })\n            setData(tempData);\n        }\n        else if(value === \"want_to_read\"){\n            const tempData = books[0].filter(item => {\n                for(let i in wantToRead[0][0]){\n                    console.log(wantToRead[0][0][i]);\n                    if(wantToRead[0][0][i].id === item.id){\n                        return item;\n                    }\n                }\n            })\n            setData(tempData);\n        }\n    }\n\n    const handleSort = (value) => {\n        setSortOpt(value)\n        console.log(checked);\n        let tempData1 = data.sort((a, b) => {\n            const title1= a.volumeInfo[value];\n            const title2 = b.volumeInfo[value];\n            if(checked === \"asc\"){\n                if (title1 < title2) {\n                    return -1;\n                }\n                if (title1 > title2) {\n                    return 1;\n                }\n                return 0;   \n            }\n            else{\n                if (title1 < title2) {\n                    return 1;\n                }\n                if (title1 > title2) {\n                    return -1;\n                }\n                return 0; \n            }\n        })\n        setData(tempData1)\n    }\n\n    const handleSortDetail = (value) => {\n        console.log(value);\n        setChecked(value);\n        handleSort(sortOpt)\n    }\n    \n\n    // const handleCheck = (value) => {\n    //     if(checked === value){\n    //         return true;\n    //     }else{\n    //         return false;\n    //     }\n    // }\n\n\n\n    return (\n        <div className={styles.cont}>\n            <h2>My Books</h2>\n            <hr className={styles.horizontal_rule}/>\n            <div className={styles.cont__flex}>\n                <div className={styles.cont__filter}>\n                    <p><b>Bookshelf</b></p>\n                        <button value=\"all\" className={styles.filter_btn} onClick={e => handleChange(e.target.value)}>All</button><br/>\n                        <button value=\"read\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Read</button><br/>\n                        <button value=\"currently_reading\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Currently Reading</button><br/>\n                        <button value=\"want_to_read\" className={styles.filter_btn}  onClick={e => handleChange(e.target.value)}>Want to Read</button><br/>\n                        <hr className={styles.horizontal_rule}/>\n                        {/* <p value=\"all\" name=\"bookshelf\" onClick={handleChange}>All</p>\n                        <p>Read</p>\n                        <p>Currently Reading</p>\n                        <p>Want to Read</p> */}\n                        {/* <input type=\"radio\" id=\"all\" name=\"bookShelf\" value=\"all\" onClick={e => handleChange(e.target.value)}  checked={}/>\n                        <label for=\"male\">All</label><br/>\n                        <input type=\"radio\" id=\"read\" name=\"bookShelf\" value=\"read\" onClick={e => handleChange(e.target.value)} checked={e => e.target.value === checked? true : false}/>\n                        <label for=\"female\">Read</label><br/>\n                        <input type=\"radio\" id=\"currently_reading\" name=\"bookShelf\" value=\"currently_reading\" onClick={e => handleChange(e.target.value)} checked={e => {return e.target.value === checked? true : false}}/>\n                        <label for=\"other\">Currently Reading</label><br/>\n                        <input type=\"radio\" id=\"want_to_read\" name=\"bookShelf\" value=\"want_to_read\"/>\n                        <label for=\"other\">Want to Read</label>   */}\n                </div>\n                <div className={styles.cont__main}>\n                    {\n                        data.length !== 0 ? data.map(item =>\n                            <MyBooksCard {...item} key={item.id}/>   \n                        ): books.length !== 0 ? books[0].map(item =>  <MyBooksCard {...item} key={item.id}/> ): <div></div>\n                    }  \n                </div>\n                <div>\n                    <p><b>Sort</b></p>\n                    <div className={styles.cont__sort}>\n                        <select name=\"sort\" value={sortOpt} onChange={e => handleSort(e.target.value)}>\n                            <option value=\"title\">Title</option>\n                            <option value=\"averageRating\">Rating</option>\n                            <option value=\"publishedDate\">Publised Date</option>\n                        </select>\n                        <div>\n                            <span>\n                                <input type=\"radio\" id=\"asc\" name=\"sort\" value=\"asc\" checked={checked===\"asc\" ? true: false} onClick={e => handleSortDetail(e.target.value)}/>\n                                <label for=\"asc\">Asc</label>\n                            </span>\n                            <span>\n                                <input type=\"radio\" id=\"asc\" name=\"sort\" value=\"dsc\" checked={checked===\"dsc\" ? true: false} onClick={e => handleSortDetail(e.target.value)}/>\n                                <label for=\"asc\">Dsc</label>\n                            </span>\n                        </div>\n                    </div> \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {MyBooks}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/genres/Genres.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/showBookCard/ShowBookCard.jsx",["353"],"import React from 'react'\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\nimport styles from './ShowBookCard.module.css'\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\nimport { bookSearchPerformerByID } from '../../redux/search/action';\nimport { useParams } from 'react-router-dom';\nimport {GoGraph} from 'react-icons/go'\nimport StarRatings from 'react-star-ratings';\nimport { ReadButton } from '../readButton/ReadButton'\n\nconst ShowBookCard = () => {\n    const {bookId} = useParams()\n    const dispatch = useDispatch()\n    const {selectedBook} = useSelector(state => state.book, shallowEqual)\n\n    React.useEffect(() => {\n        dispatch(bookSearchPerformerByID(bookId))\n    }, [bookId])\n\n    if(selectedBook !== null){\n        const {volumeInfo} = selectedBook\n        const {title, authors, description, publisher, publishedDate, pageCount, averageRating, ratingsCount, imageLinks, infoLink} = volumeInfo\n        const src = imageLinks === undefined ? \"https://via.placeholder.com/150x220.png?text=No+image\" : imageLinks.smallThumbnail\n\n        const handlePage = () => {\n            window.open(infoLink, \"_blank\")\n        }\n\n        return (\n            <div className = {styles.container}>\n                <div className = {styles.left}>\n                    <img src = {src} alt = \"img\"></img>\n                    <ReadButton selectedBook = {selectedBook}></ReadButton>\n                </div>\n                <div className = {styles.right}>\n                    <h2>{title}</h2>\n                    <strong>by {authors?.map((item, i) => <span key = {i}>{item}</span>)}</strong>\n                    <div className = {styles.rating}>\n                        <StarRatings\n                            rating={averageRating || 0}\n                            starDimension=\"14px\"\n                            starSpacing=\"1px\"\n                            starRatedColor=\"#FA604A\"\n                        />\n                        {` ${averageRating || 0}`} ▪ <GoGraph className = {styles.icon}></GoGraph> Rating details ▪ {ratingsCount || \"No ratings\"} ratings\n                    </div>\n                    <div  className = {styles.description}>\n                        <ReactReadMoreReadLess\n                            charLimit={200}\n                            readMoreText={\"more\"}\n                            readLessText={\"(less)\"}\n                            readMoreClassName=\"read-more-less--more\"\n                            readLessClassName=\"read-more-less--less\"\n                        >\n                            {description}\n                        </ReactReadMoreReadLess>\n                    </div>\n                    <div className = {styles.getBook}>\n                        <h5>GET A BOOK</h5>\n                        <button onClick = {handlePage}>Google Books</button>\n                    </div>\n                    <div className = {styles.moreDetails}>\n                        <div>{pageCount} pages</div>\n                        <div>{`Published ${publishedDate} by ${publisher}`}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return null\n}\n\nexport {ShowBookCard}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Navbar/Navbar.jsx",["354"],"import React from \"react\";\nimport styles from \"./Navbar.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { Search } from \"../searchBar/Search\";\n\nconst Navbar = () => {\n  return (\n    <div className={styles.navbar__cont}>\n      <div className={styles.navbar__left}>\n        <div className={styles.menu__logo}>\n          <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F1%2F1a%2FGoodreads_logo.svg%2F800px-Goodreads_logo.svg.png&f=1&nofb=1\" />\n        </div>\n        <div className={styles.menu}>\n          <Link to=\"/\" className={styles.menu__link}>\n            Home\n          </Link>\n        </div>\n        <div className={styles.menu}>\n          <Link to=\"/mybooks\" className={styles.menu__link}>\n            My Books\n          </Link>\n        </div>\n        <div className={styles.menu}>\n          <Link to=\"#\" className={styles.menu__link}>\n            Browse <i class=\"fas fa-caret-down\"></i>\n          </Link>\n          <div className={styles.dropdown_content}>\n            <Link to=\"/genres\" className={styles.dropdown_link}>\n              All Genre\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Mystery\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Thriller\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Comic\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Children's\n            </Link>\n          </div>\n        </div>\n        <div className={styles.menu}>\n          <Link to=\"#\" className={styles.menu__link}>\n            Community <i class=\"fas fa-caret-down\"></i>\n          </Link>\n          <div className={styles.dropdown_content}>\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Discussions\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              People\n            </Link>\n            <br />\n            <Link to=\"/trivia\" className={styles.dropdown_link}>\n              Trivia\n            </Link>\n            <br />\n            <Link to=\"/quotes\" className={styles.dropdown_link}>\n              Quotes\n            </Link>\n            <br />\n          </div>\n        </div>\n      </div>\n      <div className={styles.flexgrow1}></div>\n      <div>\n        <Search></Search>\n      </div>\n      <div className={styles.flexgrow2}></div>\n      <div className={styles.navbar__right}>\n        <div className={styles.menu__icon}>\n          <Link to=\"#\">\n            <i class=\"fas fa-bell\"></i>\n          </Link>\n        </div>\n        <div className={styles.menu__icon}>\n          <Link to=\"#\">\n            <i class=\"fas fa-comments\"></i>\n          </Link>\n        </div>\n        <div className={styles.menu__icon}>\n          <Link to=\"#\">\n            <i class=\"fas fa-envelope\"></i>\n          </Link>\n        </div>\n        <div className={styles.menu__icon}>\n          <Link to=\"#\">\n            <i class=\"fas fa-users\"></i>\n          </Link>\n        </div>\n        <div className={styles.menu__icon}>\n          <Link to=\"#\">\n            <i class=\"fas fa-user\"></i>\n          </Link>\n          <div className={styles.dropdown_content}>\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Name\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Profile\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Friends\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Discussions\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Favourites\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Quotes\n            </Link>\n            <br />\n            <Link to=\"#\" className={styles.dropdown_link}>\n              Sign Out\n            </Link>\n            <br />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Navbar };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Footer/Footer.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/messaging/chat/Chat.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/peoplePage/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/genres/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/search/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Discussion/action.js",["355","356","357"],"import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nconst getReq = () => {\n  return {\n    type: ActionTypes.GET_POST_REQ,\n  };\n};\nconst getSuccess = (payload) => {\n  return {\n    type: ActionTypes.GET_POST_SUCSESS,\n    payload,\n  };\n};\nconst getFail = (payload) => {\n  return {\n    type: ActionTypes.GET_POST_FAIL,\n    payload,\n  };\n};\nconst getDataReq = () => {\n  return {\n    type: ActionTypes.GET_REQ,\n  };\n};\nconst getDataSuccess = (payload) => {\n  return {\n    type: ActionTypes.GET_SUCSESS,\n    payload,\n  };\n};\nconst getDataFail = (payload) => {\n  return {\n    type: ActionTypes.GET_FAIL,\n    payload,\n  };\n};\nexport const getPostDis = (payload) => (dispatch) => {\n  console.log(payload);\n  dispatch(getReq());\n  axios\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/posts\", {\n      bookname: payload.bookname,\n      topic: payload.topic,\n      comment: payload.comment,\n      addBook: payload.addBook,\n      author: payload.author,\n      id: 1,\n    })\n    .then((res) => {\n      dispatch(getDataReq());\n      axios\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/posts/1\")\n        .then((res) => {\n          console.log(\"res\", res.data);\n          dispatch(getDataSuccess(res.data));\n        })\n        .catch((err) => {\n          dispatch(getDataFail(err));\n        });\n    })\n    .catch((err) => {\n      dispatch(getFail(err));\n    });\n};\n// export const getDataPost = (payload) => (dispatch) => {\n\n//   return axios\n\n// };\n//for the particular comment to post\n\nconst postReq1 = () => {\n  return {\n    type: ActionTypes.POST1_REQ,\n  };\n};\nconst postSuccess1 = (payload) => {\n  return {\n    type: ActionTypes.POST1_SUCSESS,\n    payload,\n  };\n};\nconst postFail1 = (payload) => {\n  return {\n    type: ActionTypes.POST1_FAIL,\n    payload,\n  };\n};\nconst getPost1Req = () => {\n  return {\n    type: ActionTypes.GET_POST1_REQ,\n  };\n};\nconst getPost1Success = (payload) => {\n  return {\n    type: ActionTypes.GET_POST1_SUCSESS,\n    payload,\n  };\n};\nconst getPost1Fail = (payload) => {\n  return {\n    type: ActionTypes.GET_POST1_FAIL,\n    payload,\n  };\n};\n\nexport const Post1Dis = (payload) => (dispatch) => {\n  console.log(payload);\n  dispatch(postReq1());\n  axios\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/postcomments\", {\n      comment: payload.post,\n    })\n    .then((res) => {\n      axios\n        .get(\"https://json-server-test-mocker-him.herokuapp.com/postcomments/4\")\n        .then((res) => {\n          dispatch(getPost1Success(res.data));\n        })\n        .catch((err) => {\n          dispatch(getPost1Fail(err));\n        });\n    })\n    .catch((err) => {\n      dispatch(postFail1(err));\n    });\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Post/action.js",["358","359"],"import { GET_POSTS_FAILURE, GET_POSTS_REQUEST, GET_POSTS_SUCCESS } from \"./actionType\"\nimport { UPDATE_POSTS_FAILURE, UPDATE_POSTS_REQUEST, UPDATE_POSTS_SUCCESS } from \"./actionType\"\nimport axios from \"axios\"\n\nconst getPostsRequest = (payload) =>{\n    return{\n        type: GET_POSTS_REQUEST,\n        payload\n    }\n}\n\nconst getPostsSuccess = (payload) =>{\n    return{\n        type: GET_POSTS_SUCCESS,\n        payload\n    }\n}\n\nconst getPostsFailure = (payload) =>{\n    return{\n        type: GET_POSTS_FAILURE,\n        payload\n    }\n}\n\nconst getPosts = (payload) => (dispatch) =>{\n    dispatch(getPostsRequest);\n    return axios\n    .get(\"https://good-reads-users-mock.herokuapp.com/community_updates\")\n    .then(res => dispatch(getPostsSuccess(res.data)))\n    .catch(err => {\n        dispatch(getPostsFailure(err))\n    })\n}\n\n\n\nconst updatePostsRequest = (payload) =>{\n    return{\n        type: UPDATE_POSTS_REQUEST,\n        payload\n    }\n}\n\nconst updatePostsSuccess = (payload) =>{\n    return{\n        type: UPDATE_POSTS_SUCCESS,\n        payload\n    }\n}\n\nconst updatePostsFailure = (payload) =>{\n    return{\n        type: UPDATE_POSTS_FAILURE,\n        payload\n    }\n}\n\n\nconst updatePosts = (id, commentObj) => async(dispatch) => {\n    try{\n        if(commentObj !== null){\n            let res = await axios.get(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`)\n            let tempData = res.data.comments;\n            tempData.push(commentObj)\n            dispatch(updatePostsRequest())\n            const det = await axios.patch(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`,{\n                comments : tempData\n            })\n            dispatch(getPosts())\n        }else{\n            let res = await axios.get(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`)\n            let tempData = res.data.likes;\n            tempData++;\n            dispatch(updatePostsRequest())\n            const det = await axios.patch(`https://good-reads-users-mock.herokuapp.com/community_updates/${id}`,{\n                 likes : tempData\n            })\n            dispatch(getPosts())\n        }\n    }catch (err){\n        console.log(err);\n    }\n}\n\nexport {updatePosts, getPosts}","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/allOptions/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Trivia/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/landingPage/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/myBooks/action.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Trivia/TriviaQuestuion.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/Post/Post.jsx",["360","361","362","363","364","365","366","367"],"import React from 'react'\nimport styles from \"./PostStyle.module.css\"\nimport Rating from '@material-ui/lab/Rating';\nimport {Link} from \"react-router-dom\"\nimport {useDispatch} from \"react-redux\"\nimport { updatePosts } from '../../redux/Post/action';\nimport {v4 as uuid} from \"uuid\"\nimport {ReadButton} from \"../readButton/ReadButton\"\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\n\n\nconst Post = (props) => {\n\n    const {type_of_post, name, image_url, rating, review, likes, comments, id, handleComment, handleLike} = props;\n    const {authors, title, description} = props.book_data.volumeInfo;\n\n    const [commentInput, setCommentInput] = React.useState(\"\")\n    const [commentData, setCommentData] = React.useState([])\n\n    const currUserProfile = \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.3OcSxB5CZPfkP5NB8z1CDQHaHa%26pid%3DApi&f=1\"\n    const currentUser =\"Mandar Satam\";\n\n    const commentObj = {\n        id: uuid(),\n        user: currentUser,\n        comment: commentInput,\n        commenterImg: currUserProfile\n    }\n\n    const ref = React.useRef();\n\n    const handleFocus = () => {\n        ref.current.focus()\n    }\n    // const dispatch = useDispatch()\n\n    let thumbnail;\n    \"imageLinks\" in props.book_data.volumeInfo ?  thumbnail = props.book_data.volumeInfo.imageLinks.thumbnail : thumbnail = \"https://via.placeholder.com/140x200\"\n\n    return (\n        <div className={styles.post}>\n            <div className={styles.post_profile}>\n                <img src={image_url}/>\n            </div>\n            <div className={styles.post__cont}>\n                <div className={styles.post__top}>\n                    <p className={styles.name_action}><b>{name}</b>{\n                        type_of_post === \"read\"? \" has read \": type_of_post === \"reading\" ? \" is reading\" : type_of_post === \"wantToRead\" ? \" wants to read\" : type_of_post === \"rating\" ? \" has rated\" : type_of_post === \"review\" ? \" has reviewed\" : \"\"\n                    }</p>\n                    {\n                        rating !== \"\" && \n                        <>\n                        <p>Rating:</p>\n                        <Rating name=\"read-only\" value={rating} readOnly />\n                        </>\n                    }\n                    {\n                        review !== \"\" && \n                        <p>{review}</p>\n                    }\n                    {/* <p className={styles.time_stamp}>Just Now</p> */}\n                </div>\n                <div className={styles.post__main}>\n                    <div>\n                        <img src={thumbnail}/>\n                    </div>\n                    <div className={styles.main__content}>\n                        <h3>{title}</h3>\n                        <p>by {authors[0]}</p>\n                        {/* <ReadButton/> */}\n                        <ReactReadMoreReadLess\n                            charLimit={200}\n                            readMoreText={\"more\"}\n                            readLessText={\"(less)\"}\n                            readMoreClassName=\"read-more-less--more\"\n                            readLessClassName=\"read-more-less--less\"\n                        >\n                            {description}\n                        </ReactReadMoreReadLess>\n                    </div>\n                </div>\n                <div className={styles.like_comment}>\n                    <button onClick={() => handleLike(id)}>{likes !== 0 ? likes : 0} - Likes</button><span> . </span>\n                    <button onClick={() => handleFocus(id)}>{comments.length !== 0 ? comments.length : 0} - Comments</button>\n                </div>\n            </div>\n            <div className={styles.post__bottom}>\n                <div style={{borderBottom : \"1px solid #D8D8D8\"}}>\n                    {\n                        comments?.map(item => \n                            <>\n                            <div className={styles.comment_user}>\n                                <div className={styles.comment_user_profile}>\n                                    <img src={item.commenterImg}/>\n                                </div>\n                                <div className={styles.comment_comment}>\n                                    <p><b>{item.user}</b></p>\n                                    <p>{item.comment}</p>\n                                </div>                           \n                            </div>\n                            </>\n                            )\n                    }\n                \n                </div>\n                <div className={styles.current_comment}>\n                    <div className={styles.comment_current_profile}>\n                        <img src={currUserProfile}/>\n                    </div>\n                    <div className={styles.comment_current_input}>\n                        <form onSubmit={(e) => handleComment(id, commentObj, e)}>\n                            <input type=\"text\" ref={ref} placeholder=\"Write a comment...\" onChange={e => setCommentInput(e.target.value)}/>\n                        </form>\n                    </div>     \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {Post}\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/shelfBookCard/ShelfBookCard.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/searchBar/Search.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/readButton/ReadButton.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/MyBooksCard/MyBooksCard.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/searchResultCard/SearchResultCard.jsx",[],["368","369"],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/Quotes.jsx",["370"],"import React from \"react\";\nimport styles from \"./Quotes.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from \"../../redux/Quotes/action\";\nimport { Link } from \"react-router-dom\";\nimport { add } from \"../../redux/Quotes/actionadd\";\nconst Quotes = () => {\n  const [author, setAuthor] = React.useState(\"\");\n  const data = useSelector((state) => state.quotes.data);\n  const isLoading = useSelector((state) => state.quotes.isLoading);\n\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    dispatch(\n      getData({\n        _page: 1,\n        _limit: 8,\n      })\n    );\n  }, []);\n  const handleSearch = () => {\n    dispatch(\n      getData({\n        _page: 1,\n        _limit: 5,\n        q: author,\n      })\n    );\n    setAuthor(\"\");\n  };\n  const handleUsers = (e, _page = 1, _limit = 8) => {\n    dispatch(\n      getData({\n        _page,\n        _limit,\n      })\n    );\n  };\n  const handleLikes = (e) => {\n    const newData = data.find((ele) => ele.id === e);\n    dispatch(add(newData));\n  };\n  return (\n    <div className={styles.cont}>\n      <div className={styles.cont__left}>\n        <p style={{ fontWeight: \"700\", fontSize: \"22px\" }}>Popular Quotes</p>\n        <input\n          style={{\n            width: \"64%\",\n            height: \"20px\",\n            marginLeft: \"10px\",\n            marginTop: \"13px\",\n          }}\n          type=\"text\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n          placeholder=\"Find the quotes by author\"\n        />\n        <button\n          style={{ width: \"80px\", height: \"25px\", cursor: \"pointer\" }}\n          onClick={handleSearch}\n        >\n          Search\n        </button>\n        <hr\n          style={{\n            width: \"95%\",\n            marginLeft: \"12px\",\n            marginTop: \"15px\",\n            color: \"lightgray\",\n            backgroundColor: \"black\",\n          }}\n        />\n        <p style={{ marginTop: \"10px\", marginLeft: \"12px\", fontSize: \"14px\" }}>\n          Quotes popular among Goodreads members\n        </p>\n        {isLoading ? (\n          <div style={{ marginLeft: \"12px\" }}>great things is coming...</div>\n        ) : (\n          <div>\n            {data.map((ele) => (\n              <div className={styles.quotesBox} key={ele.id}>\n                <div className={styles.quotesBoxImg}>\n                  <img src={ele.img} alt=\"img\" />\n                </div>\n                <div style={{ width: \"80%\" }}>\n                  <p>\"{ele.quote}\"</p>\n                  <p style={{ fontWeight: \"700\", marginTop: \"10px\" }}>\n                    -{ele.author}\n                  </p>\n                  <Link>\n                    <p\n                      style={{\n                        marginLeft: \"85%\",\n                        fontSize: \"13px\",\n                        color: \"#12645E\",\n                      }}\n                    >\n                      {Math.floor(Math.random() * 1001)} likes\n                    </p>\n                  </Link>\n                </div>\n                <div>\n                  <button\n                    onClick={() => handleLikes(ele.id)}\n                    style={{\n                      width: \"35px\",\n                      height: \"20px\",\n                      cursor: \"pointer\",\n                      title: \"add to my quotes\",\n                      marginLeft: \"15px\",\n                      fontSize: \"11px\",\n                    }}\n                  >\n                    ADD\n                  </button>\n                  <span className={styles.span}>add to my quotes</span>\n                </div>\n              </div>\n            ))}\n            <div style={{ marginLeft: \"78%\" }}>\n              {new Array(10).fill(0).map((_, index) => (\n                <button\n                  onClick={(e) => handleUsers(e, index + 1)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  {index + 1}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={styles.cont__right}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n          }}\n        >\n          <Link to=\"/myQuotes\">\n            {\" \"}\n            <p style={{ fontSize: \"12px\" }}>My Quotes</p>\n          </Link>\n          <p>|</p>\n          <Link to=\"/addQuotes\">\n            <p style={{ fontSize: \"12px\" }}>Add a Quote</p>\n          </Link>\n        </div>\n        <div>\n          <p\n            style={{\n              fontWeight: \"700\",\n              fontSize: \"13px\",\n              marginTop: \"20px\",\n              marginLeft: \"10px\",\n            }}\n          >\n            BROWSE BY TAG\n          </p>\n          <hr style={{ width: \"90%\", marginLeft: \"10px\", marginTop: \"3px\" }} />\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Love Quotes <span style={{ color: \"grey\" }}>81.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Buddha Quotes<span style={{ color: \"grey\" }}>83k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Peaky Blinders Quotes <span style={{ color: \"grey\" }}>97.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Truth Quotes <span style={{ color: \"grey\" }}>12.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Demon Quotes <span style={{ color: \"grey\" }}>811.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              God Quotes <span style={{ color: \"grey\" }}>911.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Humor Quotes <span style={{ color: \"grey\" }}>811.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Motivational Quotes <span style={{ color: \"grey\" }}>71.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Death Quotes <span style={{ color: \"grey\" }}>8121.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Hope Quotes <span style={{ color: \"grey\" }}>5121.5k</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Quotes };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/action.js",["371"],"import * as ActionTypes from \"./actionType\";\nimport axios from \"axios\";\nconst getReq = () => {\n  return {\n    type: ActionTypes.GET_REQ,\n  };\n};\nconst getSuccess = (payload) => {\n  return {\n    type: ActionTypes.GET_SUCCESS,\n    payload,\n  };\n};\nconst getFail = (payload) => {\n  return {\n    type: ActionTypes.GET_FAIL,\n  };\n};\nconst postSuccess = (payload) => {\n  return {\n    type: ActionTypes.POST_SUCEESS,\n  };\n};\nconst postFail = () => {\n  return {\n    type: ActionTypes.POST_FAIL,\n  };\n};\nexport const getData = (params = {}) => (dispatch) => {\n  dispatch(getReq());\n  console.log(\"quotes\", params);\n  axios\n    .get(\"https://json-server-test-mocker-him.herokuapp.com/quotes\", {\n      params,\n    })\n    .then((res) => {\n      dispatch(getSuccess(res.data));\n    })\n    .catch((err) => {\n      dispatch(getFail(err));\n    });\n};\nexport const postQuotes = (payload) => (dispatch) => {\n  console.log(\"postquotes\", payload);\n  axios\n    .post(\"https://json-server-test-mocker-him.herokuapp.com/quotes\", {\n      author: payload.author,\n      img: payload.img,\n      quote: payload.quote,\n    })\n    .then((res) => {\n      dispatch(postSuccess(res.data));\n    })\n    .catch((err) => {\n      console.log(\"err in posting a quotes\");\n    });\n};\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/reduceradd.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionTypeadd.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/redux/Quotes/actionadd.js",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/MyQuotes.jsx",["372"],"import React from \"react\";\nimport styles from \"./Quotes.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nconst MyQuotes = () => {\n  const data = useSelector((state) => state.quotesLikes.data);\n  console.log(\"dataq\", data);\n  return (\n    <div className={styles.cont}>\n      <div className={styles.cont__left}>\n        <p style={{ fontWeight: \"700\", fontSize: \"22px\" }}>My Liked Quotes</p>\n        <hr\n          style={{\n            width: \"95%\",\n            marginLeft: \"12px\",\n            marginTop: \"15px\",\n            color: \"lightgray\",\n            backgroundColor: \"black\",\n          }}\n        />\n        <p style={{ marginTop: \"10px\", marginLeft: \"12px\", fontSize: \"14px\" }}>\n          Quotes that you liked most :)\n        </p>\n        <div>\n          {data.map((ele) => (\n            <div className={styles.quotesBox} key={ele.id}>\n              <div className={styles.quotesBoxImg}>\n                <img src={ele.img} alt=\"img\" />\n              </div>\n              <div style={{ width: \"80%\" }}>\n                <p>\"{ele.quote}\"</p>\n                <p style={{ fontWeight: \"700\", marginTop: \"10px\" }}>\n                  -{ele.author}\n                </p>\n                <Link>\n                  <p\n                    style={{\n                      marginLeft: \"85%\",\n                      fontSize: \"13px\",\n                      color: \"#12645E\",\n                    }}\n                  >\n                    {Math.floor(Math.random() * 1001)} likes\n                  </p>\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={styles.cont__right}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n          }}\n        >\n          <Link to=\"/quotes\">\n            {\" \"}\n            <p style={{ fontSize: \"12px\" }}>Quotes</p>\n          </Link>\n          <p>|</p>\n          <Link to=\"/addQuotes\">\n            <p style={{ fontSize: \"12px\" }}>Add a Quote</p>\n          </Link>\n        </div>\n        <div>\n          <p\n            style={{\n              fontWeight: \"700\",\n              fontSize: \"13px\",\n              marginTop: \"20px\",\n              marginLeft: \"10px\",\n            }}\n          >\n            BROWSE BY TAG\n          </p>\n          <hr style={{ width: \"90%\", marginLeft: \"10px\", marginTop: \"3px\" }} />\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Love Quotes <span style={{ color: \"grey\" }}>81.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Buddha Quotes<span style={{ color: \"grey\" }}>83k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Peaky Blinders Quotes <span style={{ color: \"grey\" }}>97.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Truth Quotes <span style={{ color: \"grey\" }}>12.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Demon Quotes <span style={{ color: \"grey\" }}>811.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              God Quotes <span style={{ color: \"grey\" }}>911.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Humor Quotes <span style={{ color: \"grey\" }}>811.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Motivational Quotes <span style={{ color: \"grey\" }}>71.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Death Quotes <span style={{ color: \"grey\" }}>8121.5k</span>\n            </p>\n          </Link>\n          <Link>\n            <p\n              style={{ fontSize: \"10px\", marginLeft: \"10px\", marginTop: \"9px\" }}\n            >\n              Hope Quotes <span style={{ color: \"grey\" }}>5121.5k</span>\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { MyQuotes };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/pages/Quotes/AddQuotes.jsx",["373","374","375","376"],"import React from \"react\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { add } from \"../../redux/Quotes/actionadd\";\nimport { postQuotes, getData } from \"../../redux/Quotes/action\";\nconst AddQuotes = () => {\n  const [quotes, setQuotes] = React.useState(\"\");\n  const [author, setAuthor] = React.useState(\"\");\n  const [search, setSearch] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const data = useSelector((state) => state.quotes.data);\n  console.log(\"daadda\", data);\n  const handleAdd = () => {\n    const img1 = data.find((ele) => ele.author === author);\n    // console.log(\"img\", img1.img);\n    const data1 = {\n      author: author,\n      quote: quotes,\n      img: img1.img,\n    };\n    dispatch(add(data1));\n    dispatch(postQuotes(data1));\n  };\n  const handleSearch = () => {\n    dispatch(\n      getData({\n        q: search,\n      })\n    );\n    history.push(\"/quotes\");\n  };\n  return (\n    <div\n      style={{\n        width: \"75%\",\n        // border: \"1px solid black\",\n        margin: \"auto\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: \"6%\",\n      }}\n    >\n      <div style={{ width: \"67%\", marginTop: \"-70px\" }}>\n        <Link to=\"/quotes\">\n          <span style={{ fontSize: \"25px\" }}>Quotes</span>\n        </Link>\n        <span style={{ fontSize: \"20px\", fontWeight: \"600\" }}> >Add</span>\n        <p style={{ marginLeft: \"10px\", marginTop: \"10px\", fontSize: \"14px\" }}>\n          Before adding a new quote please first do a search and make sure it\n          doesn't already exist in the database.\n        </p>\n        <label htmlFor=\"\">\n          <p style={{ marginTop: \"13px\", marginLeft: \"11px\" }}>Quote</p>\n          <textarea\n            name=\"quotes\"\n            value={quotes}\n            cols=\"40\"\n            rows=\"7\"\n            style={{ marginLeft: \"11px\" }}\n            onChange={(e) => setQuotes(e.target.value)}\n          ></textarea>\n        </label>\n        <br />\n        <label htmlFor=\"\">\n          <p style={{ marginTop: \"15px\", marginLeft: \"13px\" }}>Author</p>\n          <input\n            type=\"text\"\n            style={{ marginTop: \"1px\", marginLeft: \"13px\", width: \"140px\" }}\n            value={author}\n            onChange={(e) => setAuthor(e.target.value)}\n            placeholder=\"Author name\"\n          />\n        </label>\n        <br />\n        <button\n          style={{\n            marginLeft: \"13px\",\n            width: \"80px\",\n            height: \"31px\",\n            cursor: \"pointer\",\n            marginTop: \"20px\",\n          }}\n          onClick={handleAdd}\n        >\n          SAVE\n        </button>\n        <Link to=\"/myQuotes\">\n          <span style={{ marginLeft: \"30px\" }}>My quotes</span>\n        </Link>\n      </div>\n      <div style={{ width: \"30%\", marginTop: \"-34px\" }}>\n        <input\n          type=\"text\"\n          name=\"\"\n          style={{ width: \"180px\", height: \"23px\" }}\n          placeholder=\"Find quotes by author\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <button\n          style={{ width: \"70px\", height: \"28px\", cursor: \"pointer\" }}\n          onClick={handleSearch}\n        >\n          Search\n        </button>\n        <div>\n          <p style={{ marginTop: \"17px\", marginLeft: \"5px\" }}>\n            Quote Guidelines\n          </p>\n          <ul>\n            <li\n              style={{\n                marginTop: \"10px\",\n                marginLeft: \"7px\",\n                fontSize: \"13px\",\n                marginLeft: \"10px\",\n              }}\n            >\n              Only enter quotes from notable people. Generally, a person is\n              notable if they have been the subject of published secondary\n              source material which is reliable, intellectually independent, and\n              independent of the subject.\n            </li>\n            <li\n              style={{\n                marginTop: \"10px\",\n                marginLeft: \"7px\",\n                fontSize: \"13px\",\n                marginLeft: \"10px\",\n              }}\n            >\n              Quotes can be from any source (books, spoken words, news articles,\n              etc) as long as they pass the above criteria.\n            </li>\n            <li\n              style={{\n                marginTop: \"10px\",\n                marginLeft: \"7px\",\n                fontSize: \"13px\",\n                marginLeft: \"10px\",\n              }}\n            >\n              Only enter the author's name in the author field (not their\n              birthdate or which book the quote is from).\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { AddQuotes };\n","/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/CurrentlyReading/CurrentlyReading.jsx",[],"/Users/durgesh/Desktop/goodReads_1/Goodreads---Charlie/good_reads/src/components/WantToRead/WantToRead.jsx",["377"],"import React from 'react'\nimport styles from \"./WantToRead.module.css\"\n\n\nconst WantToRead = ({image}) => {\n    return (\n        <div className={styles.want_to_read}>\n            <div>\n                <img src={image} className={styles.center_cropped} />\n            </div>\n        </div>\n    )\n}\n\nexport {WantToRead}\n",{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","severity":1,"message":"383","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":14},{"ruleId":"386","severity":1,"message":"387","line":13,"column":6,"nodeType":"388","endLine":13,"endColumn":8,"suggestions":"389"},{"ruleId":"382","severity":1,"message":"390","line":22,"column":7,"nodeType":"384","messageId":"385","endLine":22,"endColumn":29},{"ruleId":"382","severity":1,"message":"391","line":2,"column":25,"nodeType":"384","messageId":"385","endLine":2,"endColumn":34},{"ruleId":"382","severity":1,"message":"392","line":3,"column":10,"nodeType":"384","messageId":"385","endLine":3,"endColumn":16},{"ruleId":"382","severity":1,"message":"393","line":6,"column":9,"nodeType":"384","messageId":"385","endLine":6,"endColumn":15},{"ruleId":"382","severity":1,"message":"394","line":7,"column":11,"nodeType":"384","messageId":"385","endLine":7,"endColumn":24},{"ruleId":"382","severity":1,"message":"395","line":7,"column":25,"nodeType":"384","messageId":"385","endLine":7,"endColumn":29},{"ruleId":"382","severity":1,"message":"396","line":7,"column":31,"nodeType":"384","messageId":"385","endLine":7,"endColumn":36},{"ruleId":"382","severity":1,"message":"393","line":4,"column":10,"nodeType":"384","messageId":"385","endLine":4,"endColumn":16},{"ruleId":"386","severity":1,"message":"397","line":16,"column":8,"nodeType":"388","endLine":16,"endColumn":10,"suggestions":"398"},{"ruleId":"386","severity":1,"message":"397","line":16,"column":8,"nodeType":"388","endLine":16,"endColumn":10,"suggestions":"399"},{"ruleId":"382","severity":1,"message":"400","line":6,"column":3,"nodeType":"384","messageId":"385","endLine":6,"endColumn":14},{"ruleId":"382","severity":1,"message":"401","line":8,"column":3,"nodeType":"384","messageId":"385","endLine":8,"endColumn":15},{"ruleId":"382","severity":1,"message":"402","line":13,"column":9,"nodeType":"384","messageId":"385","endLine":13,"endColumn":19},{"ruleId":"382","severity":1,"message":"403","line":15,"column":11,"nodeType":"384","messageId":"385","endLine":15,"endColumn":26},{"ruleId":"382","severity":1,"message":"404","line":16,"column":11,"nodeType":"384","messageId":"385","endLine":16,"endColumn":22},{"ruleId":"382","severity":1,"message":"405","line":3,"column":16,"nodeType":"384","messageId":"385","endLine":3,"endColumn":24},{"ruleId":"382","severity":1,"message":"400","line":5,"column":22,"nodeType":"384","messageId":"385","endLine":5,"endColumn":33},{"ruleId":"406","severity":1,"message":"407","line":90,"column":11,"nodeType":"408","endLine":90,"endColumn":25},{"ruleId":"386","severity":1,"message":"409","line":15,"column":8,"nodeType":"388","endLine":15,"endColumn":10,"suggestions":"410"},{"ruleId":"382","severity":1,"message":"411","line":8,"column":10,"nodeType":"384","messageId":"385","endLine":8,"endColumn":16},{"ruleId":"386","severity":1,"message":"387","line":16,"column":6,"nodeType":"388","endLine":16,"endColumn":8,"suggestions":"412"},{"ruleId":"386","severity":1,"message":"413","line":19,"column":6,"nodeType":"388","endLine":19,"endColumn":20,"suggestions":"414"},{"ruleId":"382","severity":1,"message":"393","line":5,"column":10,"nodeType":"384","messageId":"385","endLine":5,"endColumn":16},{"ruleId":"382","severity":1,"message":"415","line":29,"column":15,"nodeType":"384","messageId":"385","endLine":29,"endColumn":21},{"ruleId":"386","severity":1,"message":"416","line":34,"column":6,"nodeType":"388","endLine":34,"endColumn":8,"suggestions":"417"},{"ruleId":"418","severity":1,"message":"419","line":28,"column":51,"nodeType":"420","messageId":"421","endLine":28,"endColumn":53},{"ruleId":"418","severity":1,"message":"419","line":38,"column":51,"nodeType":"420","messageId":"421","endLine":38,"endColumn":53},{"ruleId":"418","severity":1,"message":"419","line":49,"column":51,"nodeType":"420","messageId":"421","endLine":49,"endColumn":53},{"ruleId":"386","severity":1,"message":"387","line":18,"column":8,"nodeType":"388","endLine":18,"endColumn":16,"suggestions":"422"},{"ruleId":"423","severity":1,"message":"424","line":11,"column":11,"nodeType":"425","endLine":11,"endColumn":207},{"ruleId":"382","severity":1,"message":"426","line":8,"column":7,"nodeType":"384","messageId":"385","endLine":8,"endColumn":17},{"ruleId":"382","severity":1,"message":"427","line":77,"column":7,"nodeType":"384","messageId":"385","endLine":77,"endColumn":19},{"ruleId":"382","severity":1,"message":"428","line":89,"column":7,"nodeType":"384","messageId":"385","endLine":89,"endColumn":18},{"ruleId":"382","severity":1,"message":"429","line":45,"column":7,"nodeType":"384","messageId":"385","endLine":45,"endColumn":25},{"ruleId":"382","severity":1,"message":"430","line":52,"column":7,"nodeType":"384","messageId":"385","endLine":52,"endColumn":25},{"ruleId":"382","severity":1,"message":"395","line":4,"column":9,"nodeType":"384","messageId":"385","endLine":4,"endColumn":13},{"ruleId":"382","severity":1,"message":"431","line":5,"column":9,"nodeType":"384","messageId":"385","endLine":5,"endColumn":20},{"ruleId":"382","severity":1,"message":"432","line":12,"column":12,"nodeType":"384","messageId":"385","endLine":12,"endColumn":19},{"ruleId":"382","severity":1,"message":"433","line":12,"column":21,"nodeType":"384","messageId":"385","endLine":12,"endColumn":25},{"ruleId":"382","severity":1,"message":"434","line":12,"column":27,"nodeType":"384","messageId":"385","endLine":12,"endColumn":39},{"ruleId":"423","severity":1,"message":"424","line":31,"column":17,"nodeType":"425","endLine":31,"endColumn":39},{"ruleId":"423","severity":1,"message":"424","line":53,"column":25,"nodeType":"425","endLine":53,"endColumn":47},{"ruleId":"423","severity":1,"message":"424","line":75,"column":37,"nodeType":"425","endLine":75,"endColumn":67},{"ruleId":"378","replacedBy":"435"},{"ruleId":"380","replacedBy":"436"},{"ruleId":"386","severity":1,"message":"387","line":20,"column":6,"nodeType":"388","endLine":20,"endColumn":8,"suggestions":"437"},{"ruleId":"382","severity":1,"message":"438","line":24,"column":7,"nodeType":"384","messageId":"385","endLine":24,"endColumn":15},{"ruleId":"382","severity":1,"message":"431","line":3,"column":23,"nodeType":"384","messageId":"385","endLine":3,"endColumn":34},{"ruleId":"382","severity":1,"message":"405","line":2,"column":16,"nodeType":"384","messageId":"385","endLine":2,"endColumn":24},{"ruleId":"439","severity":1,"message":"440","line":117,"column":17,"nodeType":"441","messageId":"442","endLine":117,"endColumn":27},{"ruleId":"439","severity":1,"message":"440","line":130,"column":17,"nodeType":"441","messageId":"442","endLine":130,"endColumn":27},{"ruleId":"439","severity":1,"message":"440","line":141,"column":17,"nodeType":"441","messageId":"442","endLine":141,"endColumn":27},{"ruleId":"423","severity":1,"message":"424","line":9,"column":17,"nodeType":"425","endLine":9,"endColumn":70},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["445"],"'communityUpdateSuccess' is assigned a value but never used.","'useParams' is defined but never used.","'Navbar' is defined but never used.","'Footer' is defined but never used.","'useRouteMatch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'endpoint'. Either include them or remove the dependency array.",["446"],["447"],"'getDataPost' is defined but never used.","'getDataPost1' is defined but never used.","'isLoading2' is assigned a value but never used.","'currUserProfile' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook React.useEffect has missing dependencies: 'dispatch' and 'type'. Either include them or remove the dependency array.",["448"],"'Search' is defined but never used.",["449"],"React Hook React.useEffect has a missing dependency: 'getImages'. Either include it or remove the dependency array.",["450"],"'setNum' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'num', and 'q'. Either include them or remove the dependency array.",["451"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["452"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getSuccess' is assigned a value but never used.","'postSuccess1' is assigned a value but never used.","'getPost1Req' is assigned a value but never used.","'updatePostsSuccess' is assigned a value but never used.","'updatePostsFailure' is assigned a value but never used.","'useDispatch' is defined but never used.","'comment' is assigned a value but never used.","'user' is assigned a value but never used.","'commenterImg' is assigned a value but never used.",["443"],["444"],["453"],"'postFail' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"456","fix":"458"},{"desc":"459","fix":"460"},{"desc":"454","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"454","fix":"468"},"Update the dependencies array to be: [dispatch]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, endpoint]",{"range":"471","text":"472"},{"range":"473","text":"472"},"Update the dependencies array to be: [dispatch, type]",{"range":"474","text":"475"},{"range":"476","text":"470"},"Update the dependencies array to be: [currentIndex, getImages]",{"range":"477","text":"478"},"Update the dependencies array to be: [dispatch, num, q]",{"range":"479","text":"480"},"Update the dependencies array to be: [bookId, dispatch]",{"range":"481","text":"482"},{"range":"483","text":"470"},[370,372],"[dispatch]",[623,625],"[dispatch, endpoint]",[600,602],[554,556],"[dispatch, type]",[675,677],[728,742],"[currentIndex, getImages]",[1321,1323],"[dispatch, num, q]",[717,725],"[bookId, dispatch]",[619,621]]